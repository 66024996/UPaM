<!DOCTYPE html>
<html lang="th">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>จัดการการจอง - UPaM Admin</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', sans-serif;
      background: #f8fafc;
      min-height: 100vh;
      font-size: 14px;
    }

    /* Header */
    .header {
      background: white;
      padding: 12px 24px;
      box-shadow: 0 5px 10px rgba(0, 0, 0, 0.477);
      display: flex;
      justify-content: space-between;
      align-items: center;
      position: sticky;
      top: 0;
      z-index: 100;
      background: linear-gradient(135deg, #ffff 0%, #183ccbba 100%);
    }

    .logo {
      display: flex;
      align-items: center;
    }

    .logo-img {
      width: 60px;
      height: 60px;
      margin-right: 10px;
    }

    .phone-number {
      color: #6B7280;
      font-size: 16px;
      display: flex;
      align-items: center;
      gap: 5px;
    }

    .header-right {
      display: flex;
      align-items: center;
      gap: 20px;
    }

    .header-icons {
      display: flex;
      gap: 8px;
    }

    .icon-btn {
      width: 36px;
      height: 36px;
      border-radius: 50%;
      background: #F3F4F6;
      border: none;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.2s ease;
      color: #6B7280;
    }

    .icon-btn:hover {
      background: #E5E7EB;
      transform: translateY(-1px);
    }

    .notification-btn {
      position: relative;
    }

    .notification-btn::after {
      content: '';
      position: absolute;
      top: 6px;
      right: 6px;
      width: 8px;
      height: 8px;
      background: #EF4444;
      border-radius: 50%;
      border: 2px solid white;
    }

    /* Profile Dropdown Styles */
    .profile-dropdown {
      position: relative;
      display: inline-block;
    }

    .dropdown-content {
      display: none;
      position: absolute;
      right: 0;
      background-color: white;
      min-width: 180px;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);
      z-index: 1000;
      border-radius: 12px;
      overflow: hidden;
      border: 1px solid #e5e7eb;
      margin-top: 8px;
    }

    .dropdown-content.show {
      display: block;
      animation: dropdownFadeIn 0.3s ease-out;
    }

    @keyframes dropdownFadeIn {
      from {
        opacity: 0;
        transform: translateY(-10px);
      }

      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .dropdown-item {
      color: #374151;
      padding: 12px 20px;
      text-decoration: none;
      display: block;
      transition: all 0.3s ease;
      border: none;
      background: none;
      width: 100%;
      text-align: left;
      font-size: 14px;
      cursor: pointer;
    }

    .dropdown-item:hover {
      background-color: #f9fafb;
      color: #1f2937;
    }

    .dropdown-item i {
      margin-right: 10px;
      width: 16px;
      color: #6b7280;
    }

    .dropdown-item.logout {
      border-top: 1px solid #e5e7eb;
      color: #dc2626;
    }

    .dropdown-item.logout:hover {
      background-color: #fef2f2;
      color: #dc2626;
    }

    .dropdown-item.logout i {
      color: #dc2626;
    }

    /* Container */
    .container {
      max-width: 1200px;
      margin: 40px auto;
      padding: 0 20px;
    }

    .page-title {
      text-align: center;
      font-size: 48px;
      color: #3B82F6;
      font-weight: 600;
      margin-bottom: 10px;
    }

    .subtitle {
      text-align: center;
      color: #6B7280;
      font-size: 18px;
      margin-bottom: 40px;
    }

    /* Search and Filter Section */
    .filter-section {
      background: white;
      border-radius: 16px;
      padding: 24px;
      margin-bottom: 24px;
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
    }

    .filter-row {
      display: flex;
      gap: 20px;
      align-items: center;
      flex-wrap: wrap;
    }

    .search-input {
      flex: 1;
      min-width: 300px;
      padding: 12px 16px;
      border: 2px solid #E5E7EB;
      border-radius: 8px;
      font-size: 16px;
      background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="gray"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/></svg>') no-repeat right 12px center;
      background-size: 20px;
      padding-right: 40px;
    }

    .search-input:focus {
      outline: none;
      border-color: #3B82F6;
    }

    .date-filter {
      padding: 12px 16px;
      border: 2px solid #E5E7EB;
      border-radius: 8px;
      font-size: 16px;
      background: white;
      cursor: pointer;
    }

    .date-filter:focus {
      outline: none;
      border-color: #3B82F6;
    }

    /* Status Tabs */
    .status-tabs {
      display: flex;
      gap: 8px;
      margin-bottom: 24px;
      background: white;
      padding: 8px;
      border-radius: 12px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .status-tab {
      padding: 12px 24px;
      border: none;
      border-radius: 8px;
      font-size: 16px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s ease;
      background: transparent;
      color: #6B7280;
      position: relative;
    }

    .status-tab.active {
      background: #3B82F6;
      color: white;
    }

    .status-tab:hover:not(.active) {
      background: #F3F4F6;
      color: #374151;
    }

    .status-count {
      background: #EF4444;
      color: white;
      border-radius: 12px;
      padding: 2px 8px;
      font-size: 12px;
      font-weight: 600;
      margin-left: 8px;
    }

    .status-tab.active .status-count {
      background: rgba(255, 255, 255, 0.3);
    }

    /* Booking Cards */
    .booking-list {
      display: flex;
      flex-direction: column;
      gap: 16px;
    }

    .booking-card {
      background: white;
      border-radius: 16px;
      padding: 24px;
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
      border-left: 4px solid #F59E0B;
      transition: all 0.2s ease;
      cursor: pointer;
    }

    .booking-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
    }

    .booking-card.confirmed {
      border-left-color: #10B981;
    }

    .booking-card.cancelled {
      border-left-color: #EF4444;
    }

    .booking-header {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      margin-bottom: 16px;
    }

    .booking-id {
      font-size: 18px;
      font-weight: 700;
      color: #1F2937;
    }

    .booking-status {
      padding: 6px 12px;
      border-radius: 20px;
      font-size: 14px;
      font-weight: 600;
    }

    .status-pending {
      background: #FEF3C7;
      color: #92400E;
    }

    .status-confirmed {
      background: #D1FAE5;
      color: #065F46;
    }

    .status-cancelled {
      background: #FEE2E2;
      color: #991B1B;
    }

    .booking-info {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 16px;
      margin-bottom: 16px;
    }

    .info-item {
      display: flex;
      flex-direction: column;
      gap: 4px;
    }

    .info-label {
      font-size: 14px;
      color: #6B7280;
      font-weight: 500;
    }

    .info-value {
      font-size: 16px;
      color: #1F2937;
      font-weight: 500;
    }

    .price-value {
      color: #EF4444;
      font-weight: 700;
    }

    .booking-actions {
      display: flex;
      gap: 12px;
      justify-content: flex-end;
      margin-top: 16px;
      padding-top: 16px;
      border-top: 1px solid #E5E7EB;
    }

    .btn {
      padding: 8px 16px;
      border: none;
      border-radius: 8px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.2s ease;
      display: inline-flex;
      align-items: center;
      gap: 6px;
    }

    .btn-view {
      background: #F3F4F6;
      color: #374151;
      border: 1px solid #E5E7EB;
    }

    .btn-view:hover {
      background: #E5E7EB;
    }

    .btn-confirm {
      background: #10B981;
      color: white;
    }

    .btn-confirm:hover {
      background: #059669;
    }

    .btn-cancel {
      background: #EF4444;
      color: white;
    }

    .btn-cancel:hover {
      background: #DC2626;
    }

    /* Detail Modal */
    .detail-modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 1000;
      justify-content: center;
      align-items: center;
    }

    .detail-modal.show {
      display: flex;
    }

    .modal-content {
      background: white;
      border-radius: 16px;
      padding: 32px;
      max-width: 600px;
      width: 90%;
      max-height: 90vh;
      overflow-y: auto;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
    }

    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 24px;
      padding-bottom: 16px;
      border-bottom: 2px solid #E5E7EB;
    }

    .modal-title {
      font-size: 24px;
      font-weight: 700;
      color: #1F2937;
    }

    .close-btn {
      background: none;
      border: none;
      font-size: 24px;
      color: #6B7280;
      cursor: pointer;
      padding: 4px;
      border-radius: 4px;
      transition: all 0.2s ease;
    }

    .close-btn:hover {
      background: #F3F4F6;
      color: #374151;
    }

    .detail-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 20px;
      margin-bottom: 24px;
    }

    .detail-item {
      display: flex;
      flex-direction: column;
      gap: 6px;
    }

    .detail-label {
      font-size: 14px;
      color: #6B7280;
      font-weight: 500;
    }

    .detail-value {
      font-size: 16px;
      color: #1F2937;
      font-weight: 500;
    }

    .problem-section {
      grid-column: 1 / -1;
      background: #F9FAFB;
      padding: 16px;
      border-radius: 8px;
      border-left: 4px solid #3B82F6;
    }

    .modal-actions {
      display: flex;
      gap: 12px;
      justify-content: flex-end;
      margin-top: 24px;
      padding-top: 16px;
      border-top: 1px solid #E5E7EB;
    }

    /* Staff Assignment Modal */
    .staff-modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 1001;
      justify-content: center;
      align-items: center;
    }

    .staff-modal.show {
      display: flex;
    }

    .staff-modal-content {
      background: white;
      border-radius: 16px;
      padding: 32px;
      max-width: 400px;
      width: 90%;
      text-align: center;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
    }

    .staff-modal-title {
      font-size: 20px;
      font-weight: 600;
      color: #1F2937;
      margin-bottom: 20px;
    }

    .staff-select {
      width: 100%;
      padding: 12px 16px;
      border: 2px solid #E5E7EB;
      border-radius: 8px;
      font-size: 16px;
      margin-bottom: 24px;
      background: white;
    }

    .staff-select:focus {
      outline: none;
      border-color: #3B82F6;
    }

    .staff-modal-actions {
      display: flex;
      gap: 12px;
      justify-content: center;
    }

    .btn-modal {
      padding: 12px 24px;
      border: none;
      border-radius: 8px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.2s ease;
    }

    .btn-modal-primary {
      background: #3B82F6;
      color: white;
    }

    .btn-modal-primary:hover {
      background: #2563EB;
    }

    .btn-modal-secondary {
      background: #F3F4F6;
      color: #374151;
    }

    .btn-modal-secondary:hover {
      background: #E5E7EB;
    }

    /* Success Modal */
    .success-modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 1002;
      justify-content: center;
      align-items: center;
    }

    .success-modal.show {
      display: flex;
    }

    .success-modal-content {
      background: white;
      border-radius: 16px;
      padding: 40px;
      max-width: 400px;
      width: 90%;
      text-align: center;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
    }

    .success-icon {
      width: 80px;
      height: 80px;
      background: #10B981;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto 20px;
      color: white;
      font-size: 36px;
    }

    .success-title {
      font-size: 24px;
      font-weight: 600;
      color: #1F2937;
      margin-bottom: 10px;
    }

    .success-message {
      font-size: 16px;
      color: #6B7280;
      margin-bottom: 24px;
      line-height: 1.5;
    }

    /* Empty State */
    .empty-state {
      text-align: center;
      padding: 60px 20px;
      color: #6B7280;
    }

    .empty-icon {
      font-size: 48px;
      margin-bottom: 16px;
      color: #D1D5DB;
    }

    .empty-title {
      font-size: 20px;
      font-weight: 600;
      margin-bottom: 8px;
    }

    .empty-message {
      font-size: 16px;
    }

    /* Loading */
    .loading {
      opacity: 0.7;
      pointer-events: none;
    }

    .btn.loading::after {
      content: "";
      width: 14px;
      height: 14px;
      margin-left: 6px;
      border: 2px solid transparent;
      border-top: 2px solid currentColor;
      border-radius: 50%;
      display: inline-block;
      animation: spin 1s linear infinite;
    }

    @keyframes spin {
      0% {
        transform: rotate(0deg);
      }

      100% {
        transform: rotate(360deg);
      }
    }

    /* Responsive */
    @media (max-width: 768px) {
      .container {
        padding: 0 16px;
      }

      .page-title {
        font-size: 32px;
      }

      .filter-row {
        flex-direction: column;
      }

      .search-input {
        min-width: 100%;
      }

      .booking-info {
        grid-template-columns: 1fr;
      }

      .booking-actions {
        flex-wrap: wrap;
      }

      .detail-grid {
        grid-template-columns: 1fr;
      }

      .status-tabs {
        overflow-x: auto;
        padding: 8px;
      }
    }
  </style>
</head>

<body>
  <!-- Header -->
  <div class="header">
    <div class="logo">
      <img src="public/img/UPaMLOGO.png" class="logo-img">
      <div class="phone-number">
        <i class="fas fa-phone"></i>
        1234
      </div>
    </div>

    <div class="header-right">
      <div class="header-icons">
        <button class="icon-btn" title="ค้นหา">
          <i class="fas fa-search"></i>
        </button>
        <button class="icon-btn notification-btn" title="การแจ้งเตือน">
          <i class="fas fa-bell"></i>
        </button>
        <div class="profile-dropdown">
          <a href="/Login">
            <button class="icon-btn" title="บัญชีผู้ใช้">
              <i class="fas fa-user"></i>
            </button>
          </a>
          <div class="dropdown-content" id="profileDropdown">
            <button class="dropdown-item logout" onclick="logout()">
              <i class="fas fa-sign-out-alt"></i>
              ออกจากระบบ
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Main Content -->
  <div class="container">
    <h1 class="page-title">จัดการการจอง</h1>
    <p class="subtitle">ระบบจัดการการนัดหมายและการจองคิว</p>

    <!-- Filter Section -->
    <div class="filter-section">
      <div class="filter-row">
        <input type="text" class="search-input" placeholder="ค้นหาด้วยรหัสการจอง หรือ ชื่อผู้ป่วย..." id="searchInput">
        <input type="date" class="date-filter" id="dateFilter">
      </div>
    </div>

    <!-- Status Tabs -->
    <div class="status-tabs">
      <button class="status-tab active" data-status="pending" onclick="switchTab('pending')">
        รอการยืนยันเลือกเจ้าหน้าที่ <span class="status-count" id="pendingCount">0</span>
      </button>
      <button class="status-tab" data-status="confirmed" onclick="switchTab('confirmed')">
        ยืนยันการเลื่อนแล้ว <span class="status-count" id="confirmedCount">0</span>
      </button>
      <button class="status-tab" data-status="cancelled" onclick="switchTab('cancelled')">
        ยืนยันการยกเลิก <span class="status-count" id="cancelledCount">0</span>
      </button>
    </div>

    <!-- Booking List -->
    <div class="booking-list" id="bookingList">
      <!-- Pending bookings will be populated here -->
    </div>
  </div>

  <!-- Detail Modal -->
  <div class="detail-modal" id="detailModal">
    <div class="modal-content">
      <div class="modal-header">
        <h3 class="modal-title">รายละเอียดการจอง</h3>
        <button class="close-btn" onclick="closeDetailModal()">
          <i class="fas fa-times"></i>
        </button>
      </div>

      <div class="detail-grid">
        <div class="detail-item">
          <div class="detail-label">รหัสการจอง</div>
          <div class="detail-value" id="modalBookingId">-</div>
        </div>

        <div class="detail-item">
          <div class="detail-label">ชื่อ-นามสกุล</div>
          <div class="detail-value" id="modalPatientName">-</div>
        </div>

        <div class="detail-item">
          <div class="detail-label">บริการ</div>
          <div class="detail-value" id="modalService">-</div>
        </div>

        <div class="detail-item">
          <div class="detail-label">วันที่นัดหมาย</div>
          <div class="detail-value" id="modalDate">-</div>
        </div>

        <div class="detail-item">
          <div class="detail-label">เวลา</div>
          <div class="detail-value" id="modalTime">-</div>
        </div>

        <div class="detail-item">
          <div class="detail-label">ค่าบริการ</div>
          <div class="detail-value price-value" id="modalPrice">-</div>
        </div>

        <div class="detail-item problem-section">
          <div class="detail-label">ปัญหาสุขภาพ</div>
          <div class="detail-value" id="modalProblem">-</div>
        </div>
      </div>

      <div class="modal-actions" id="modalActions">
        <!-- Actions will be populated based on status -->
      </div>
    </div>
  </div>

  <!-- Staff Assignment Modal -->
  <div class="staff-modal" id="staffModal">
    <div class="staff-modal-content">
      <h3 class="staff-modal-title">เลือกเจ้าหน้าที่ผู้ดูแล</h3>
      <select class="staff-select" id="staffSelect">
        <option value="">-- เลือกเจ้าหน้าที่ --</option>
        <option value="ทนพ. กำปั่น แสงจันทร์">ทนพ. กำปั่น แสงจันทร์</option>
        <option value="ทนพ. เชษฐา เอี่ยมจินดา">ทนพ. เชษฐา เอี่ยมจินดา</option>
        <option value="ทนพ. ขจวยศร กรรเชียง">ทนพ. ขจวยศร กรรเชียง</option>
        <option value="ทนพ. ประสิทธิโชค กรรเชียง">ทนพ. ประสิทธิโชค กรรเชียง</option>
      </select>
      <div class="staff-modal-actions">
        <button class="btn-modal btn-modal-secondary" onclick="closeModal('staffModal')">ยกเลิก</button>
        <button class="btn-modal btn-modal-primary" onclick="confirmStaffAssignment()">ยืนยัน</button>
      </div>
    </div>
  </div>

  <!-- Success Modal -->
  <div class="success-modal" id="successModal">
    <div class="success-modal-content">
      <div class="success-icon">
        <i class="fas fa-check"></i>
      </div>
      <h3 class="success-title">ยืนยันสำเร็จ!</h3>
      <p class="success-message" id="successMessage">
        การนัดหมายได้รับการยืนยันและมอบหมายให้เจ้าหน้าที่แล้ว
      </p>
      <button class="btn-modal btn-modal-primary" onclick="closeSuccessModal()">
        ตกลง
      </button>
    </div>
  </div>

  <script>
    let bookings = [];
    let currentTab = 'pending';
    let currentBookingId = null;
    let currentBookingType = null;
    let confirmAppointment = null

    document.addEventListener('DOMContentLoaded', initializePage);
    // Mapping DB ↔ UI
    const mapStatus = dbStatus => ({
      'จองแล้ว': 'pending',
      'ยืนยันแล้ว': 'confirmed',
      'ยกเลิกแล้ว': 'cancelled'
    }[dbStatus] || 'pending');

    const mapStatusToDb = uiStatus => ({
      'pending': 'จองแล้ว',
      'confirmed': 'ยืนยันแล้ว',
      'cancelled': 'ยกเลิกแล้ว'
    }[uiStatus] || 'จองแล้ว');

    // Profile dropdown
    const profileBtn = document.getElementById('profileBtn');
    const profileDropdown = document.getElementById('profileDropdown');

    profileBtn.addEventListener('click', e => { e.stopPropagation(); profileDropdown.classList.toggle('show'); });
    window.addEventListener('click', () => profileDropdown.classList.remove('show'));
    profileDropdown.addEventListener('click', e => e.stopPropagation());

    function logout(event) {
      if (!confirm('คุณต้องการออกจากระบบหรือไม่?')) return;
      event.target.innerHTML = '<i class="fas fa-spinner fa-spin"></i> กำลังออกจากระบบ...';
      setTimeout(() => window.location.href = "/Login", 1500);
    }

    // Initialize
    function initializePage() {
      setupEventListeners();
      loadBookings();
    }

    // Event listeners
    function setupEventListeners() {
      document.getElementById('searchInput')?.addEventListener('input', handleSearch);
      document.getElementById('dateFilter')?.addEventListener('change', handleSearch);

      ['detailModal', 'staffModal', 'successModal'].forEach(modalId => {
        const modal = document.getElementById(modalId);
        if (!modal) return;
        modal.addEventListener('click', e => { if (e.target === modal) closeModal(modalId); });
      });

      document.addEventListener('keydown', e => {
        if (e.key === 'Escape') ['detailModal', 'staffModal', 'successModal'].forEach(closeModal);
      });
    }

    // Switch tab
    function switchTab(status) {
      currentTab = status;
      document.querySelectorAll('.status-tab').forEach(tab => tab.classList.remove('active'));
      document.querySelector(`[data-status="${status}"]`)?.classList.add('active');
      loadBookings();
    }

    // Load bookings
    async function loadBookings() {
      try {
        const res = await fetch(`/api/admin/appointments?status=${currentTab}`);
        const data = await res.json();

        if (data.success) {
          bookings = data.appointments.map(a => {
            return {
              id: a.id,
              status: a.status,
              patientName: a.patientName,
              service: a.service,
              date: a.appointment_date,
              time: a.time_slot,
              price: a.total_price,
              assignedStaff: a.assignedStaff || null,
              type: a.appointment_type,
              problem: a.problem || '-'
            }
          });
          renderBookings(bookings, currentTab);
          await updateCounts();
          // Update modal if open
          if (currentBookingId && document.getElementById('detailModal')?.classList.contains('show')) {
            openDetailModal(currentBookingId);
          }
        } else console.error('โหลดข้อมูลล้มเหลว:', data.message);
      } catch (err) { console.error('API error:', err); }
    }


    // Render bookings
    function renderBookings(bookingInput, currentTabInput) {
      const data = bookingInput?.length ? bookingInput : bookings
      const tab = currentTabInput ? currentTabInput : currentTab
      const filterd = data.filter(b => b.status === tab)
      renderFilteredBookings(filterd);
    }

    function renderFilteredBookings(filteredBookings) {

      const bookingList = document.getElementById('bookingList');
      if (!filteredBookings.length) {
        bookingList.innerHTML = `<div class="empty-state">
          <div class="empty-icon"><i class="fas fa-calendar-times"></i></div>
          <div class="empty-title">ไม่มีการจองในสถานะนี้</div>
          <div class="empty-message">ยังไม่มีรายการจองที่ต้องจัดการในขณะนี้</div>
        </div>`;
        return;
      }

      let html = '';
      filteredBookings.forEach(b => {
        let statusClass = '', statusText = '', actionsHtml = '';
        switch (b.status) {
          case 'pending':
            statusClass = 'status-pending'; statusText = 'รอการยืนยัน';
            actionsHtml = `<button class="btn btn-confirm" onclick="openStaffModal('${b.id}')"><i class="fas fa-check"></i> ยืนยัน</button>
                          <button class="btn btn-cancel" onclick="cancelBooking('${b.id}', '${b.type}')"><i class="fas fa-times"></i> ยกเลิก</button>`;
            break;
          case 'confirmed':
            statusClass = 'status-confirmed'; statusText = 'ยืนยัน'; actionsHtml = '';
            break;
          case 'cancelled':
            statusClass = 'status-cancelled'; statusText = 'ยกเลิกแล้ว'; actionsHtml = '';
            break;
        }

        html += `<div class="booking-card ${b.status}" onclick="openDetailModal('${b.id}')">
          <div class="booking-header">
            <div class="booking-id">รหัส ${b.id}</div>
            <div class="booking-status ${statusClass}">${statusText}</div>
          </div>
          <div class="booking-info">
            <div class="info-item"><div class="info-label">ชื่อผู้ป่วย</div><div class="info-value">${b.patientName}</div></div>
            <div class="info-item"><div class="info-label">บริการ</div><div class="info-value">${b.service}</div></div>
            <div class="info-item"><div class="info-label">วันที่</div><div class="info-value">${b.date}</div></div>
            <div class="info-item"><div class="info-label">เวลา</div><div class="info-value">${b.time} น.</div></div>
            <div class="info-item"><div class="info-label">ค่าบริการ</div><div class="info-value">${b.price} บาท</div></div>
            ${b.assignedStaff ? `<div class="info-item"><div class="info-label">เจ้าหน้าที่</div><div class="info-value">${b.assignedStaff}</div></div>` : ''}
          </div>
          <div class="booking-actions" onclick="event.stopPropagation()">
            <button class="btn btn-view" onclick="openDetailModal('${b.id}')"><i class="fas fa-eye"></i> ดูรายละเอียด</button>
            ${actionsHtml}
          </div>
        </div>`;
      });

      bookingList.innerHTML = html;
    }

    // Update counts
    async function updateCounts() {
      const resBookingCount = await fetch(`/api/admin/manangeBookingCount`)
      const bookingCounts = await resBookingCount.json()
      document.getElementById('pendingCount').textContent = bookingCounts.waiting
      document.getElementById('confirmedCount').textContent = bookingCounts.confirmed
      document.getElementById('cancelledCount').textContent = bookingCounts.cancelled
    }

    // Search/filter
    function handleSearch() {
      const term = document.getElementById('searchInput')?.value.toLowerCase() || '';
      const dateFilter = document.getElementById('dateFilter')?.value;
      let filtered = bookings.filter(b => b.status === currentTab);
      if (term) filtered = filtered.filter(b => b.id.toString().includes(term) || b.patientName.toLowerCase().includes(term));
      if (dateFilter) filtered = filtered.filter(b => new Date(b.date).toDateString() === new Date(dateFilter).toDateString());
      renderFilteredBookings(filtered);
    }

    // Modal
    function openDetailModal(id) {
      const b = bookings.find(x => x.id === id);
      if (!b) return;
      currentBookingId = b.id;
      currentBookingType = b.type;
      document.getElementById('modalBookingId').textContent = b.id;
      document.getElementById('modalPatientName').textContent = b.patientName;
      document.getElementById('modalService').textContent = b.service;
      document.getElementById('modalDate').textContent = b.date;
      document.getElementById('modalTime').textContent = b.time + ' น.';
      document.getElementById('modalPrice').textContent = b.price + ' บาท';
      document.getElementById('modalProblem').textContent = b.problem;

      const actions = document.getElementById('modalActions');
      if (b.status === 'pending') {
        actions.innerHTML = `<button class="btn btn-confirm" onclick="openStaffModal('${b.id}')"><i class="fas fa-check"></i> ยืนยันการจอง</button>
                            <button class="btn btn-cancel" onclick="cancelBooking('${b.id}')"><i class="fas fa-times"></i> ยกเลิกการจอง</button>`;
      } else actions.innerHTML = `<button class="btn btn-view" onclick="closeModal('detailModal')"><i class="fas fa-times"></i> ปิด</button>`;

      document.getElementById('detailModal').classList.add('show');
    }

    function openStaffModal(id) {
      const b = bookings.filter(x => x.id == id);
      if (!b.length) return;
      currentBookingId = b[0].id;
      confirmAppointment = currentBookingId
      currentBookingType = b[0].type;
      document.getElementById('staffSelect').value = '';
      document.getElementById('staffModal').classList.add('show');
      closeModal('detailModal');
    }

    function closeSuccessModal() {
      document.getElementById("successModal").remove()
    }

    function closeModal(id) {
      const modal = document.getElementById(id);
      if (modal) modal.classList.remove('show');
      if (id !== 'successModal') currentBookingId = null;
    }

    // Confirm staff
    async function confirmStaffAssignment() {
      const staff = document.getElementById('staffSelect').value;
      if (!staff) return alert('กรุณาเลือกเจ้าหน้าที่');
      try {
        const res = await fetch(`/api/admin/appointments/${confirmAppointment}/status`, {
          method: "PUT",
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ status: 'confirmed', staffName: staff, type: currentBookingType })
        });
        const data = await res.json();
        if (data.success) {
          const b = bookings.find(x => x.id === currentBookingId);
          if (b) { b.status = 'confirmed'; b.assignedStaff = staff; }
          closeModal('staffModal');
          document.getElementById('successMessage').innerHTML = data.message;
          document.getElementById('successModal').classList.add('show');
          loadBookings()
          await updateCounts();
        } else alert('❌ ' + data.message);
      } catch (err) { console.error(err); alert('เกิดข้อผิดพลาด'); }
      console.log("📌 staff_id:", staffId);
      console.log("📌 staff_name:", staffName);
      
    }

    // Cancel booking
    async function cancelBooking(id, type) {
      if (!confirm('คุณแน่ใจหรือไม่ที่จะยกเลิกการจองนี้?')) return;
      try {
        const res = await fetch(`/api/admin/appointments/${id}/status`, {
          method: 'PUT', headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ status: 'cancelled', reason: 'ยกเลิกโดยผู้ดูแล', type })
        });
        const data = await res.json();
        if (data.success) {
          const b = bookings.find(x => x.id === id);
          if (b) b.status = 'cancelled';
          closeModal('detailModal');
          showNotification(data.message, 'warning');
          initializePage()
          await updateCounts();
        } else alert('❌ ' + data.message);
      } catch (err) { console.error(err); alert('เกิดข้อผิดพลาด'); }
    }

    // Notification
    function showNotification(msg, type = 'success') {
      const n = document.createElement('div');
      n.className = `notification ${type}`;
      n.innerHTML = `<i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-triangle'}"></i> ${msg}`;
      Object.assign(n.style, {
        position: 'fixed', top: '20px', right: '20px', background: type === 'success' ? '#10B981' : '#F59E0B',
        color: '#fff', padding: '12px 20px', borderRadius: '8px', boxShadow: '0 4px 12px rgba(0,0,0,0.15)',
        zIndex: 2000, display: 'flex', alignItems: 'center', gap: '8px', fontWeight: '500',
        animation: 'slideIn 0.3s ease-out'
      });
      document.body.appendChild(n);
      setTimeout(() => { n.style.animation = 'slideOut 0.3s ease-in forwards'; setTimeout(() => n.remove(), 300); }, 3000);
    }

    // // Auto-refresh
    // function startAutoRefresh(interval=5000){ setInterval(loadBookings,interval); }

    // Notification animation CSS
    const style = document.createElement('style');
    style.textContent = `@keyframes slideIn{from{transform:translateX(100%);opacity:0}to{transform:translateX(0);opacity:1}}
    @keyframes slideOut{from{transform:translateX(0);opacity:1}to{transform:translateX(100%);opacity:0}}`;
    document.head.appendChild(style);

    // Init
    // document.addEventListener('DOMContentLoaded',()=>{ initializePage(); startAutoRefresh(5000); });
  </script>
</body>

</html>