<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>จัดการการจอง - UPaM Admin</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0; padding: 0; box-sizing: border-box;
    }
    body {
      font-family: 'Inter', sans-serif;
      background: #f8fafc;
      min-height: 100vh;
      font-size: 14px;
    }

    /* Header */
    .header {
      background: white;
      padding: 12px 24px;
      box-shadow: 0 5px 10px rgba(0, 0, 0, 0.477);
      display: flex;
      justify-content: space-between;
      align-items: center;
      position: sticky;
      top: 0;
      z-index: 100;
      background: linear-gradient(135deg, #ffff 0%, #183ccbba 100%);
    }

    .logo {
      display: flex;
      align-items: center;
    }

    .logo-img {
      width: 60px;
      height: 60px;
      margin-right: 10px;
    }

    .phone-number {
      color: #6B7280;
      font-size: 16px;
      display: flex;
      align-items: center;
      gap: 5px;
    }

    .header-right {
      display: flex;
      align-items: center;
      gap: 20px;
    }

    .header-icons {
      display: flex;
      gap: 8px;
    }

    .icon-btn {
      width: 36px;
      height: 36px;
      border-radius: 50%;
      background: #F3F4F6;
      border: none;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.2s ease;
      color: #6B7280;
    }

    .icon-btn:hover {
      background: #E5E7EB;
      transform: translateY(-1px);
    }

    .notification-btn {
      position: relative;
    }

    .notification-btn::after {
      content: '';
      position: absolute;
      top: 6px;
      right: 6px;
      width: 8px;
      height: 8px;
      background: #EF4444;
      border-radius: 50%;
      border: 2px solid white;
    }
    /* Profile Dropdown Styles */
        .profile-dropdown {
            position: relative;
            display: inline-block;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            right: 0;
            background-color: white;
            min-width: 180px;
            box-shadow: 0 8px 32px rgba(0,0,0,0.15);
            z-index: 1000;
            border-radius: 12px;
            overflow: hidden;
            border: 1px solid #e5e7eb;
            margin-top: 8px;
        }

        .dropdown-content.show {
            display: block;
            animation: dropdownFadeIn 0.3s ease-out;
        }

        @keyframes dropdownFadeIn {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .dropdown-item {
            color: #374151;
            padding: 12px 20px;
            text-decoration: none;
            display: block;
            transition: all 0.3s ease;
            border: none;
            background: none;
            width: 100%;
            text-align: left;
            font-size: 14px;
            cursor: pointer;
        }

        .dropdown-item:hover {
            background-color: #f9fafb;
            color: #1f2937;
        }

        .dropdown-item i {
            margin-right: 10px;
            width: 16px;
            color: #6b7280;
        }

        .dropdown-item.logout {
            border-top: 1px solid #e5e7eb;
            color: #dc2626;
        }

        .dropdown-item.logout:hover {
            background-color: #fef2f2;
            color: #dc2626;
        }

        .dropdown-item.logout i {
            color: #dc2626;
        }
    /* Container */
    .container {
      max-width: 1200px;
      margin: 40px auto;
      padding: 0 20px;
    }

    .page-title {
      text-align: center;
      font-size: 48px;
      color: #3B82F6;
      font-weight: 600;
      margin-bottom: 10px;
    }

    .subtitle {
      text-align: center;
      color: #6B7280;
      font-size: 18px;
      margin-bottom: 40px;
    }

    /* Search and Filter Section */
    .filter-section {
      background: white;
      border-radius: 16px;
      padding: 24px;
      margin-bottom: 24px;
      box-shadow: 0 4px 16px rgba(0,0,0,0.08);
    }

    .filter-row {
      display: flex;
      gap: 20px;
      align-items: center;
      flex-wrap: wrap;
    }

    .search-input {
      flex: 1;
      min-width: 300px;
      padding: 12px 16px;
      border: 2px solid #E5E7EB;
      border-radius: 8px;
      font-size: 16px;
      background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="gray"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/></svg>') no-repeat right 12px center;
      background-size: 20px;
      padding-right: 40px;
    }

    .search-input:focus {
      outline: none;
      border-color: #3B82F6;
    }

    .date-filter {
      padding: 12px 16px;
      border: 2px solid #E5E7EB;
      border-radius: 8px;
      font-size: 16px;
      background: white;
      cursor: pointer;
    }

    .date-filter:focus {
      outline: none;
      border-color: #3B82F6;
    }

    /* Status Tabs */
    .status-tabs {
      display: flex;
      gap: 8px;
      margin-bottom: 24px;
      background: white;
      padding: 8px;
      border-radius: 12px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    }

    .status-tab {
      padding: 12px 24px;
      border: none;
      border-radius: 8px;
      font-size: 16px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s ease;
      background: transparent;
      color: #6B7280;
      position: relative;
    }

    .status-tab.active {
      background: #3B82F6;
      color: white;
    }

    .status-tab:hover:not(.active) {
      background: #F3F4F6;
      color: #374151;
    }

    .status-count {
      background: #EF4444;
      color: white;
      border-radius: 12px;
      padding: 2px 8px;
      font-size: 12px;
      font-weight: 600;
      margin-left: 8px;
    }

    .status-tab.active .status-count {
      background: rgba(255,255,255,0.3);
    }

    /* Booking Cards */
    .booking-list {
      display: flex;
      flex-direction: column;
      gap: 16px;
    }

    .booking-card {
      background: white;
      border-radius: 16px;
      padding: 24px;
      box-shadow: 0 4px 16px rgba(0,0,0,0.08);
      border-left: 4px solid #F59E0B;
      transition: all 0.2s ease;
      cursor: pointer;
    }

    .booking-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 24px rgba(0,0,0,0.12);
    }

    .booking-card.confirmed {
      border-left-color: #10B981;
    }

    .booking-card.cancelled {
      border-left-color: #EF4444;
    }

    .booking-header {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      margin-bottom: 16px;
    }

    .booking-id {
      font-size: 18px;
      font-weight: 700;
      color: #1F2937;
    }

    .booking-status {
      padding: 6px 12px;
      border-radius: 20px;
      font-size: 14px;
      font-weight: 600;
    }

    .status-pending {
      background: #FEF3C7;
      color: #92400E;
    }

    .status-confirmed {
      background: #D1FAE5;
      color: #065F46;
    }

    .status-cancelled {
      background: #FEE2E2;
      color: #991B1B;
    }

    .booking-info {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 16px;
      margin-bottom: 16px;
    }

    .info-item {
      display: flex;
      flex-direction: column;
      gap: 4px;
    }

    .info-label {
      font-size: 14px;
      color: #6B7280;
      font-weight: 500;
    }

    .info-value {
      font-size: 16px;
      color: #1F2937;
      font-weight: 500;
    }

    .price-value {
      color: #EF4444;
      font-weight: 700;
    }

    .booking-actions {
      display: flex;
      gap: 12px;
      justify-content: flex-end;
      margin-top: 16px;
      padding-top: 16px;
      border-top: 1px solid #E5E7EB;
    }

    .btn {
      padding: 8px 16px;
      border: none;
      border-radius: 8px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.2s ease;
      display: inline-flex;
      align-items: center;
      gap: 6px;
    }

    .btn-view {
      background: #F3F4F6;
      color: #374151;
      border: 1px solid #E5E7EB;
    }

    .btn-view:hover {
      background: #E5E7EB;
    }

    .btn-confirm {
      background: #10B981;
      color: white;
    }

    .btn-confirm:hover {
      background: #059669;
    }

    .btn-cancel {
      background: #EF4444;
      color: white;
    }

    .btn-cancel:hover {
      background: #DC2626;
    }

    /* Detail Modal */
    .detail-modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 1000;
      justify-content: center;
      align-items: center;
    }

    .detail-modal.show {
      display: flex;
    }

    .modal-content {
      background: white;
      border-radius: 16px;
      padding: 32px;
      max-width: 600px;
      width: 90%;
      max-height: 90vh;
      overflow-y: auto;
      box-shadow: 0 20px 40px rgba(0,0,0,0.2);
    }

    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 24px;
      padding-bottom: 16px;
      border-bottom: 2px solid #E5E7EB;
    }

    .modal-title {
      font-size: 24px;
      font-weight: 700;
      color: #1F2937;
    }

    .close-btn {
      background: none;
      border: none;
      font-size: 24px;
      color: #6B7280;
      cursor: pointer;
      padding: 4px;
      border-radius: 4px;
      transition: all 0.2s ease;
    }

    .close-btn:hover {
      background: #F3F4F6;
      color: #374151;
    }

    .detail-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 20px;
      margin-bottom: 24px;
    }

    .detail-item {
      display: flex;
      flex-direction: column;
      gap: 6px;
    }

    .detail-label {
      font-size: 14px;
      color: #6B7280;
      font-weight: 500;
    }

    .detail-value {
      font-size: 16px;
      color: #1F2937;
      font-weight: 500;
    }

    .problem-section {
      grid-column: 1 / -1;
      background: #F9FAFB;
      padding: 16px;
      border-radius: 8px;
      border-left: 4px solid #3B82F6;
    }

    .modal-actions {
      display: flex;
      gap: 12px;
      justify-content: flex-end;
      margin-top: 24px;
      padding-top: 16px;
      border-top: 1px solid #E5E7EB;
    }

    /* Staff Assignment Modal */
    .staff-modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 1001;
      justify-content: center;
      align-items: center;
    }

    .staff-modal.show {
      display: flex;
    }

    .staff-modal-content {
      background: white;
      border-radius: 16px;
      padding: 32px;
      max-width: 400px;
      width: 90%;
      text-align: center;
      box-shadow: 0 20px 40px rgba(0,0,0,0.2);
    }

    .staff-modal-title {
      font-size: 20px;
      font-weight: 600;
      color: #1F2937;
      margin-bottom: 20px;
    }

    .staff-select {
      width: 100%;
      padding: 12px 16px;
      border: 2px solid #E5E7EB;
      border-radius: 8px;
      font-size: 16px;
      margin-bottom: 24px;
      background: white;
    }

    .staff-select:focus {
      outline: none;
      border-color: #3B82F6;
    }

    .staff-modal-actions {
      display: flex;
      gap: 12px;
      justify-content: center;
    }

    .btn-modal {
      padding: 12px 24px;
      border: none;
      border-radius: 8px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.2s ease;
    }

    .btn-modal-primary {
      background: #3B82F6;
      color: white;
    }

    .btn-modal-primary:hover {
      background: #2563EB;
    }

    .btn-modal-secondary {
      background: #F3F4F6;
      color: #374151;
    }

    .btn-modal-secondary:hover {
      background: #E5E7EB;
    }

    /* Success Modal */
    .success-modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 1002;
      justify-content: center;
      align-items: center;
    }

    .success-modal.show {
      display: flex;
    }

    .success-modal-content {
      background: white;
      border-radius: 16px;
      padding: 40px;
      max-width: 400px;
      width: 90%;
      text-align: center;
      box-shadow: 0 20px 40px rgba(0,0,0,0.2);
    }

    .success-icon {
      width: 80px;
      height: 80px;
      background: #10B981;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto 20px;
      color: white;
      font-size: 36px;
    }

    .success-title {
      font-size: 24px;
      font-weight: 600;
      color: #1F2937;
      margin-bottom: 10px;
    }

    .success-message {
      font-size: 16px;
      color: #6B7280;
      margin-bottom: 24px;
      line-height: 1.5;
    }

    /* Empty State */
    .empty-state {
      text-align: center;
      padding: 60px 20px;
      color: #6B7280;
    }

    .empty-icon {
      font-size: 48px;
      margin-bottom: 16px;
      color: #D1D5DB;
    }

    .empty-title {
      font-size: 20px;
      font-weight: 600;
      margin-bottom: 8px;
    }

    .empty-message {
      font-size: 16px;
    }

    /* Loading */
    .loading {
      opacity: 0.7;
      pointer-events: none;
    }

    .btn.loading::after {
      content: "";
      width: 14px;
      height: 14px;
      margin-left: 6px;
      border: 2px solid transparent;
      border-top: 2px solid currentColor;
      border-radius: 50%;
      display: inline-block;
      animation: spin 1s linear infinite;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    /* Responsive */
    @media (max-width: 768px) {
      .container {
        padding: 0 16px;
      }

      .page-title {
        font-size: 32px;
      }

      .filter-row {
        flex-direction: column;
      }

      .search-input {
        min-width: 100%;
      }

      .booking-info {
        grid-template-columns: 1fr;
      }

      .booking-actions {
        flex-wrap: wrap;
      }

      .detail-grid {
        grid-template-columns: 1fr;
      }

      .status-tabs {
        overflow-x: auto;
        padding: 8px;
      }
    }
  </style>
</head>
<body>
  <!-- Header -->
  <div class="header">
    <div class="logo">
      <img src="public/img/UPaMLOGO.png" class="logo-img"> 
      <div class="phone-number">
        <i class="fas fa-phone"></i>
        1234
      </div>
    </div>
    
    <div class="header-right">
      <div class="header-icons">
        <button class="icon-btn" title="ค้นหา">
          <i class="fas fa-search"></i>
        </button>
        <button class="icon-btn notification-btn" title="การแจ้งเตือน">
          <i class="fas fa-bell"></i>
        </button>
        <div class="profile-dropdown">
                    <a href="/Login">
                      <button class="icon-btn" title="บัญชีผู้ใช้">
                          <i class="fas fa-user"></i>
                      </button>
                    </a>
                    <div class="dropdown-content" id="profileDropdown">
                        <button class="dropdown-item logout" onclick="logout()">
                            <i class="fas fa-sign-out-alt"></i>
                            ออกจากระบบ
                        </button>
                    </div>
                </div>
      </div>
    </div>
  </div>

  <!-- Main Content -->
  <div class="container">
    <h1 class="page-title">จัดการการจอง</h1>
    <p class="subtitle">ระบบจัดการการนัดหมายและการจองคิว</p>

    <!-- Filter Section -->
    <div class="filter-section">
      <div class="filter-row">
        <input type="text" class="search-input" placeholder="ค้นหาด้วยรหัสการจอง หรือ ชื่อผู้ป่วย..." id="searchInput">
        <input type="date" class="date-filter" id="dateFilter">
      </div>
    </div>

    <!-- Status Tabs -->
    <div class="status-tabs">
      <button class="status-tab active" data-status="pending" onclick="switchTab('pending')">
        รอการยืนยัน <span class="status-count" id="pendingCount">3</span>
      </button>
      <button class="status-tab" data-status="confirmed" onclick="switchTab('confirmed')">
        ยืนยันแล้ว <span class="status-count" id="confirmedCount">15</span>
      </button>
      <button class="status-tab" data-status="cancelled" onclick="switchTab('cancelled')">
        ยกเลิก <span class="status-count" id="cancelledCount">2</span>
      </button>
    </div>

    <!-- Booking List -->
    <div class="booking-list" id="bookingList">
      <!-- Pending bookings will be populated here -->
    </div>
  </div>

  <!-- Detail Modal -->
  <div class="detail-modal" id="detailModal">
    <div class="modal-content">
      <div class="modal-header">
        <h3 class="modal-title">รายละเอียดการจอง</h3>
        <button class="close-btn" onclick="closeDetailModal()">
          <i class="fas fa-times"></i>
        </button>
      </div>
      
      <div class="detail-grid">
        <div class="detail-item">
          <div class="detail-label">รหัสการจอง</div>
          <div class="detail-value" id="modalBookingId">-</div>
        </div>
        
        <div class="detail-item">
          <div class="detail-label">ชื่อ-นามสกุล</div>
          <div class="detail-value" id="modalPatientName">-</div>
        </div>
        
        <div class="detail-item">
          <div class="detail-label">บริการ</div>
          <div class="detail-value" id="modalService">-</div>
        </div>
        
        <div class="detail-item">
          <div class="detail-label">วันที่นัดหมาย</div>
          <div class="detail-value" id="modalDate">-</div>
        </div>
        
        <div class="detail-item">
          <div class="detail-label">เวลา</div>
          <div class="detail-value" id="modalTime">-</div>
        </div>
        
        <div class="detail-item">
          <div class="detail-label">ค่าบริการ</div>
          <div class="detail-value price-value" id="modalPrice">-</div>
        </div>
        
        <div class="detail-item problem-section">
          <div class="detail-label">ปัญหาสุขภาพ</div>
          <div class="detail-value" id="modalProblem">-</div>
        </div>
      </div>
      
      <div class="modal-actions" id="modalActions">
        <!-- Actions will be populated based on status -->
      </div>
    </div>
  </div>

  <!-- Staff Assignment Modal -->
  <div class="staff-modal" id="staffModal">
    <div class="staff-modal-content">
      <h3 class="staff-modal-title">เลือกเจ้าหน้าที่ผู้ดูแล</h3>
      <select class="staff-select" id="staffSelect">
        <option value="">-- เลือกเจ้าหน้าที่ --</option>
        <option value="ทพ. กำปั่น ดอกจันทร์">ทนพ. กำปั่น แสงจันทร์</option>
        <option value="ทพ. เชษฐา เอี่ยมจินดา">ทนพ. เชษฐา เอี่ยมจินดา</option>
        <option value="ทพ. กรรเชียง">ทนพ. ขจวยศร กรรเชียง</option>
        <option value="ทพ. ประสิทธิโชค กรรเชียง">ทนพ. ประสิทธิโชค กรรเชียง</option>
      </select>
      <div class="staff-modal-actions">
        <button class="btn-modal btn-modal-secondary" onclick="closeStaffModal()">ยกเลิก</button>
        <button class="btn-modal btn-modal-primary" onclick="confirmStaffAssignment()">ยืนยัน</button>
      </div>
    </div>
  </div>

  <!-- Success Modal -->
  <div class="success-modal" id="successModal">
    <div class="success-modal-content">
      <div class="success-icon">
        <i class="fas fa-check"></i>
      </div>
      <h3 class="success-title">ยืนยันสำเร็จ!</h3>
      <p class="success-message" id="successMessage">
        การนัดหมายได้รับการยืนยันและมอบหมายให้เจ้าหน้าที่แล้ว
      </p>
      <button class="btn-modal btn-modal-primary" onclick="closeSuccessModal()">
        ตกลง
      </button>
    </div>
  </div>

  <script>
    let bookings = [];
    let currentTab = 'pending'; // ใช้ภาษาอังกฤษใน UI
    let currentBookingId = null;
    let currentBookingType = null;

    function mapStatus(dbStatus) {
      switch (dbStatus) {
        case 'จองแล้ว': return 'pending';
        case 'ยืนยันแล้ว': return 'confirmed';
        case 'ยกเลิกแล้ว': return 'cancelled';
        default: return 'pending';
      }
    }

    function mapStatusToDb(uiStatus) {
      switch (uiStatus) {
        case 'pending': return 'จองแล้ว';
        case 'confirmed': return 'ยืนยันแล้ว';
        case 'cancelled': return 'ยกเลิกแล้ว';
        default: return 'จองแล้ว';
      }
    }
    
    // Profile dropdown functionality
        const profileBtn = document.getElementById('profileBtn');
        const profileDropdown = document.getElementById('profileDropdown');

        profileBtn.addEventListener('click', function(e) {
            e.stopPropagation();
            profileDropdown.classList.toggle('show');
        });

        // ปิด dropdown เมื่อคลิกข้างนอก
        window.addEventListener('click', function() {
            if (profileDropdown.classList.contains('show')) {
                profileDropdown.classList.remove('show');
            }
        });

        // ป้องกันการปิด dropdown เมื่อคลิกข้างใน dropdown
        profileDropdown.addEventListener('click', function(e) {
            e.stopPropagation();
        });

        // ฟังก์ชัน logout
        function logout() {
            if (confirm('คุณต้องการออกจากระบบหรือไม่?')) {
                // เพิ่ม loading effect
                const logoutBtn = event.target;
                logoutBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> กำลังออกจากระบบ...';
                
                setTimeout(() => {
                    alert('ออกจากระบบเรียบร้อยแล้ว');
                     window.location.href = "/Login";
                }, 1500);
            }
        }
    // Sample data
    

    // Initialize page
    function initializePage() {
      renderBookings();
      updateCounts();
      loadBookings();
      setupEventListeners();
    }
    
    async function loadBookings() {
      try {
        const res = await fetch(`/api/admin/appointments?status=${currentTab}`);
        const data = await res.json();
        if (data.success) {
          const normalized = data.appointments.map(a => ({
            id: a.id,
            status: mapStatus(a.status), // ✅ แปลงสถานะ DB → UI
            patientName: a.patientName,
            service: a.service,
            date: a.appointment_date,
            time: a.time_slot,
            price: a.total_price,
            assignedStaff: a.assignedStaff || null,
            type: a.appointment_type,
            problem: a.problem || '-'   // blood appointment จะมีค่า
          }));
          bookings = normalized;
          renderBookings();
          updateCounts();
        } else {
          console.error('โหลดข้อมูลล้มเหลว:', data.message);
        }
      } catch (err) {
        console.error('API error:', err);
      }
    }

    // Setup event listeners
    function setupEventListeners() {
      document.getElementById('searchInput').addEventListener('input', handleSearch);
      document.getElementById('dateFilter').addEventListener('change', handleDateFilter);
      
      // Modal event listeners
      document.getElementById('detailModal').addEventListener('click', function(e) {
        if (e.target === this) closeDetailModal();
      });
      
      document.getElementById('staffModal').addEventListener('click', function(e) {
        if (e.target === this) closeStaffModal();
      });
      
      document.getElementById('successModal').addEventListener('click', function(e) {
        if (e.target === this) closeSuccessModal();
      });
      
      document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
          closeDetailModal();
          closeStaffModal();
          closeSuccessModal();
        }
      });
    }

    // Switch between tabs
    function switchTab(status) {
      currentTab = status;
      document.querySelectorAll('.status-tab').forEach(tab => tab.classList.remove('active'));
      document.querySelector(`[data-status="${status}"]`).classList.add('active');
      loadBookings();
    }

    const normalized = data.appointments.map(a => ({
      id: a.id,
      status: mapStatus(a.status), // แปลงสถานะให้ตรง
      patientName: a.patientName,
      service: a.service,
      date: a.appointment_date,
      time: a.time_slot,
      price: a.total_price,
      assignedStaff: a.assignedStaff || null,
      type: a.appointment_type,
      problem: a.problem || '-'   // เผื่อกรณี blood appointment
    }));

    bookings = normalized;
    renderBookings();


    // Render bookings based on current tab
    function renderBookings() {
    const bookingList = document.getElementById('bookingList');
    const filteredBookings = bookings.filter(booking => booking.status === currentTab);

    if (filteredBookings.length === 0) {
      bookingList.innerHTML = `
        <div class="empty-state">
          <div class="empty-icon">
            <i class="fas fa-calendar-times"></i>
          </div>
          <div class="empty-title">ไม่มีการจองในสถานะนี้</div>
          <div class="empty-message">ยังไม่มีรายการจองที่ต้องจัดการในขณะนี้</div>
        </div>
      `;
      return;
    }

    let html = '';
      filteredBookings.forEach(booking => {
        const statusClass = booking.status === 'pending' ? 'status-pending' : 
                          booking.status === 'confirmed' ? 'status-confirmed' : 'status-cancelled';
        const statusText = booking.status === 'pending' ? 'รอการยืนยัน' : 
                          booking.status === 'confirmed' ? 'ยืนยันแล้ว' : 'ยกเลิก';

        html += `
          <div class="booking-card ${booking.status}" onclick="openDetailModal('${booking.id}')">
            <div class="booking-header">
              <div class="booking-id">รหัส ${booking.id}</div>
              <div class="booking-status ${statusClass}">${statusText}</div>
            </div>
            
            <div class="booking-info">
              <div class="info-item">
                <div class="info-label">ชื่อผู้ป่วย</div>
                <div class="info-value">${booking.patientName}</div>
              </div>
              
              <div class="info-item">
                <div class="info-label">บริการ</div>
                <div class="info-value">${booking.service}</div>
              </div>
              
              <div class="info-item">
                <div class="info-label">วันที่</div>
                <div class="info-value">${booking.date}</div>
              </div>
              
              <div class="info-item">
                <div class="info-label">เวลา</div>
                <div class="info-value">${booking.time} น.</div>
              </div>
              
              <div class="info-item">
                <div class="info-label">ค่าบริการ</div>
                <div class="info-value price-value">${booking.price} บาท</div>
              </div>
              
              ${booking.assignedStaff ? `
                <div class="info-item">
                  <div class="info-label">เจ้าหน้าที่</div>
                  <div class="info-value">${booking.assignedStaff}</div>
                </div>
              ` : ''}
            </div>
            
            <div class="booking-actions" onclick="event.stopPropagation()">
              <button class="btn btn-view" onclick="openDetailModal('${booking.id}')">
                <i class="fas fa-eye"></i> ดูรายละเอียด
              </button>
              
              ${booking.status === 'pending' ? `
                <button class="btn btn-confirm" onclick="openStaffModal('${booking.id}')">
                  <i class="fas fa-check"></i> ยืนยัน
                </button>
                <button class="btn btn-cancel" onclick="cancelBooking('${booking.id}')">
                  <i class="fas fa-times"></i> ยกเลิก
                </button>
              ` : ''}
            </div>
          </div>
        `;
      });
      
      bookingList.innerHTML = html;
    }

    // Update counts for each tab
    function updateCounts() {
      const pendingCount = bookings.filter(b => b.status === 'pending').length;
      const confirmedCount = bookings.filter(b => b.status === 'confirmed').length;
      const cancelledCount = bookings.filter(b => b.status === 'cancelled').length;
      
      document.getElementById('pendingCount').textContent = pendingCount;
      document.getElementById('confirmedCount').textContent = confirmedCount;
      document.getElementById('cancelledCount').textContent = cancelledCount;
    }

    // Search functionality
    function handleSearch() {
      const searchTerm = document.getElementById('searchInput').value.toLowerCase();
      const dateFilter = document.getElementById('dateFilter').value;
      
      let filteredBookings = bookings.filter(booking => booking.status === currentTab);
      
      if (searchTerm) {
        filteredBookings = filteredBookings.filter(booking => 
          booking.id.toLowerCase().includes(searchTerm) ||
          booking.patientName.toLowerCase().includes(searchTerm)
        );
      }
      
      if (dateFilter) {
        const filterDate = new Date(dateFilter);
        filteredBookings = filteredBookings.filter(booking => {
          const bookingDate = parseThaiDate(booking.date);
          return bookingDate.toDateString() === filterDate.toDateString();
        });
      }
      
      renderFilteredBookings(filteredBookings);
    }

    function handleDateFilter() {
      handleSearch();
    }

    function parseThaiDate(dateStr) {
      const [day, month, year] = dateStr.split('/');
      return new Date(parseInt(year), parseInt(month) - 1, parseInt(day));
    }

    function renderFilteredBookings(filteredBookings) {
      const bookingList = document.getElementById('bookingList');
      
      if (filteredBookings.length === 0) {
        bookingList.innerHTML = `
          <div class="empty-state">
            <div class="empty-icon">
              <i class="fas fa-search"></i>
            </div>
            <div class="empty-title">ไม่พบรายการที่ค้นหา</div>
            <div class="empty-message">ลองเปลี่ยนคำค้นหาหรือกรองข้อมูลใหม่</div>
          </div>
        `;
        return;
      }

      let html = '';
      filteredBookings.forEach(booking => {
        const statusClass = booking.status === 'pending' ? 'status-pending' : 
                           booking.status === 'confirmed' ? 'status-confirmed' : 'status-cancelled';
        const statusText = booking.status === 'pending' ? 'รอการยืนยัน' : 
                          booking.status === 'confirmed' ? 'ยืนยันแล้ว' : 'ยกเลิก';
        
        html += `
          <div class="booking-card ${booking.status}" onclick="openDetailModal('${booking.id}')">
            <div class="booking-header">
              <div class="booking-id">รหัส ${booking.id}</div>
              <div class="booking-status ${statusClass}">${statusText}</div>
            </div>
            
            <div class="booking-info">
              <div class="info-item">
                <div class="info-label">ชื่อผู้ป่วย</div>
                <div class="info-value">${booking.patientName}</div>
              </div>
              
              <div class="info-item">
                <div class="info-label">บริการ</div>
                <div class="info-value">${booking.service}</div>
              </div>
              
              <div class="info-item">
                <div class="info-label">วันที่</div>
                <div class="info-value">${booking.date}</div>
              </div>
              
              <div class="info-item">
                <div class="info-label">เวลา</div>
                <div class="info-value">${booking.time} น.</div>
              </div>
              
              <div class="info-item">
                <div class="info-label">ค่าบริการ</div>
                <div class="info-value price-value">${booking.price} บาท</div>
              </div>
              
              ${booking.assignedStaff ? `
                <div class="info-item">
                  <div class="info-label">เจ้าหน้าที่</div>
                  <div class="info-value">${booking.assignedStaff}</div>
                </div>
              ` : ''}
            </div>
            
            <div class="booking-actions" onclick="event.stopPropagation()">
              <button class="btn btn-view" onclick="openDetailModal('${booking.id}')">
                <i class="fas fa-eye"></i> ดูรายละเอียด
              </button>
              
              ${booking.status === 'pending' ? `
                <button class="btn btn-confirm" onclick="openStaffModal('${booking.id}')">
                  <i class="fas fa-check"></i> ยืนยัน
                </button>
                <button class="btn btn-cancel" onclick="cancelBooking('${booking.id}')">
                  <i class="fas fa-times"></i> ยกเลิก
                </button>
              ` : ''}
            </div>
          </div>
        `;
      });
      
      bookingList.innerHTML = html;
    }

    // Modal functions
    function openDetailModal(bookingId) {
      const booking = bookings.find(b => b.id === bookingId);
      if (!booking) return;
      
      currentBookingId = bookingId;
      currentBookingType = booking.type;
      
      document.getElementById('modalBookingId').textContent = booking.id;
      document.getElementById('modalPatientName').textContent = booking.patientName;
      document.getElementById('modalService').textContent = booking.service;
      document.getElementById('modalDate').textContent = booking.date;
      document.getElementById('modalTime').textContent = booking.time + ' น.';
      document.getElementById('modalPrice').textContent = booking.price + ' บาท';
      document.getElementById('modalProblem').textContent = booking.problem;
      
      // Update modal actions based on status
      const modalActions = document.getElementById('modalActions');
      if (booking.status === 'pending') {
        modalActions.innerHTML = `
          <button class="btn btn-confirm" onclick="openStaffModal('${booking.id}')">
            <i class="fas fa-check"></i> ยืนยันการจอง
          </button>
          <button class="btn btn-cancel" onclick="cancelBooking('${booking.id}')">
            <i class="fas fa-times"></i> ยกเลิกการจอง
          </button>
        `;
      } else {
        modalActions.innerHTML = `
          <button class="btn btn-view" onclick="closeDetailModal()">
            <i class="fas fa-times"></i> ปิด
          </button>
        `;
      }
      
      document.getElementById('detailModal').classList.add('show');
    }

    function closeDetailModal() {
      document.getElementById('detailModal').classList.remove('show');
      currentBookingId = null;
    }

    function openStaffModal(bookingId) {
      const booking = bookings.find(b => b.id === bookingId);
      currentBookingId = bookingId;
      currentBookingType = booking.type;
      document.getElementById('staffSelect').value = '';
      document.getElementById('staffModal').classList.add('show');
      closeDetailModal();
    }

    function closeStaffModal() {
      document.getElementById('staffModal').classList.remove('show');
      currentBookingId = null;
    }

    function switchTab(status) {
      currentTab = status;
      document.querySelectorAll('.status-tab').forEach(tab => tab.classList.remove('active'));
      document.querySelector(`[data-status="${status}"]`).classList.add('active');
      loadBookings();
    }

    async function confirmStaffAssignment() {
      const selectedStaff = document.getElementById('staffSelect').value;
      if (!selectedStaff) return alert('กรุณาเลือกเจ้าหน้าที่');

      try {
        const res = await fetch(`/api/admin/appointments/${currentBookingId}/status`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ status: 'ยืนยันแล้ว', staffName: selectedStaff, type: bookingType })
        });
        const data = await res.json();
        if (data.success) {
          closeStaffModal();
          document.getElementById('successMessage').innerHTML = data.message;
          document.getElementById('successModal').classList.add('show');
          loadBookings();
        } else {
          alert('❌ ' + data.message);
        }
      } catch (err) {
        console.error(err);
        alert('เกิดข้อผิดพลาด');
      }
    }
    function closeSuccessModal() {
      document.getElementById('successModal').classList.remove('show');
      currentBookingId = null;
    }

    async function cancelBooking(bookingId) {
      if (!confirm('คุณแน่ใจหรือไม่ที่จะยกเลิกการจองนี้?')) return;

      try {
        const res = await fetch(`/api/admin/appointments/${bookingId}/status`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ status: 'ยกเลิกแล้ว', reason: 'ยกเลิกโดยผู้ดูแล', type: bookingType })
        });
        const data = await res.json();
        if (data.success) {
          closeDetailModal();
          showNotification(data.message, 'warning');
          loadBookings();
        } else {
          alert('❌ ' + data.message);
        }
      } catch (err) {
        console.error(err);
        alert('เกิดข้อผิดพลาด');
      }
    }

    // Show notification
    function showNotification(message, type = 'success') {
      const notification = document.createElement('div');
      notification.className = `notification ${type}`;
      notification.innerHTML = `
        <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-triangle'}"></i>
        ${message}
      `;
      
      notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: ${type === 'success' ? '#10B981' : '#F59E0B'};
        color: white;
        padding: 12px 20px;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        z-index: 2000;
        display: flex;
        align-items: center;
        gap: 8px;
        font-weight: 500;
        animation: slideIn 0.3s ease-out;
      `;
      
      document.body.appendChild(notification);
      
      setTimeout(() => {
        notification.style.animation = 'slideOut 0.3s ease-in forwards';
        setTimeout(() => {
          document.body.removeChild(notification);
        }, 300);
      }, 3000);
    }

    // Initialize when page loads
    document.addEventListener('DOMContentLoaded', function() {
      initializePage();
    });

    // Add CSS for notification animations
    const style = document.createElement('style');
    style.textContent = `
      @keyframes slideIn {
        from {
          transform: translateX(100%);
          opacity: 0;
        }
        to {
          transform: translateX(0);
          opacity: 1;
        }
      }
      
      @keyframes slideOut {
        from {
          transform: translateX(0);
          opacity: 1;
        }
        to {
          transform: translateX(100%);
          opacity: 0;
        }
      }
    `;
    document.head.appendChild(style);
    document.addEventListener('DOMContentLoaded', function() {
      loadBookings();  // เรียกใช้ loadBookings ของ admin
    });
  </script>
</body>
</html>