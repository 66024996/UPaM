<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ข้อมูลการจอง - UPaM</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0; padding: 0; box-sizing: border-box;
    }
    body {
      font-family: 'Inter', sans-serif;
      background: #f8fafc;
      min-height: 100vh;
      font-size: 14px;
    }
    
    /* Header */
    .header {
            background: white;
            padding: 12px 24px;
            box-shadow: 0 5px 10px rgba(0, 0, 0, 0.477);
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: sticky;
            top: 0;
            z-index: 100;
            background: linear-gradient(135deg, #ffff 0%, #183ccbba 100%);
        }

    .logo {
            display: flex;
            align-items: center;
        }

    .logo-img {
            width: 60px;
            height: 60px;
            margin-right: 10px;
        }

    .logo-text {
            line-height: 1;
        }

    .phone-number {
      color: #6B7280;
      font-size: 16px;
      display: flex;
      align-items: center;
      gap: 5px;
    }

    .header-right {
      display: flex;
      align-items: center;
      gap: 20px;
    }

    .header-icons {
      display: flex;
      gap: 8px;
    }

    .icon-btn {
      width: 36px;
      height: 36px;
      border-radius: 50%;
      background: #F3F4F6;
      border: none;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.2s ease;
      color: #6B7280;
    }

    .icon-btn:hover {
      background: #E5E7EB;
      transform: translateY(-1px);
    }

    .notification-btn {
      position: relative;
    }

    .notification-btn::after {
      content: '';
      position: absolute;
      top: 6px;
      right: 6px;
      width: 8px;
      height: 8px;
      background: #EF4444;
      border-radius: 50%;
      border: 2px solid white;
    }

    /* Container */
    .container {
      max-width: 900px;
      margin: 40px auto;
      padding: 0 20px;
    }
    
    .page-title {
      text-align: center;
      font-size: 48px;
      color: #3B82F6;
      font-weight: 600;
      margin-bottom: 40px;
    }

    /* Status Badge */
    .status-badge {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      padding: 8px 16px;
      border-radius: 20px;
      font-size: 14px;
      font-weight: 600;
      margin-bottom: 20px;
    }

    .status-badge.confirmed {
      background: #DCFCE7;
      color: #166534;
      border: 1px solid #BBF7D0;
    }

    .status-badge.cancelled {
      background: #FEE2E2;
      color: #991B1B;
      border: 1px solid #FECACA;
    }

    .status-badge.rescheduled {
      background: #FEF3C7;
      color: #92400E;
      border: 1px solid #FDE68A;
    }

    /* Appointment Card */
    .appointment-card {
      background: white;
      border: 2px solid #3B82F6;
      border-radius: 20px;
      padding: 40px;
      margin-bottom: 30px;
      box-shadow: 0 10px 30px rgba(0,0,0,0.1);
      position: relative;
      overflow: hidden;
    }

    .appointment-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 5px;
      background: linear-gradient(90deg, #3B82F6, #10B981, #F59E0B);
    }

    .appointment-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 30px 40px;
      margin-bottom: 30px;
    }

    .appointment-item {
      display: flex;
      flex-direction: column;
      gap: 8px;
    }

    .appointment-label {
      font-size: 16px;
      font-weight: 600;
      color: #374151;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .appointment-value {
      font-size: 18px;
      color: #1F2937;
      font-weight: 500;
    }

    .price-section {
      grid-column: 1 / -1;
      border-top: 2px solid #E5E7EB;
      padding-top: 25px;
      margin-top: 20px;
      text-align: center;
    }

    .price-label {
      font-size: 18px;
      font-weight: 600;
      color: #374151;
      margin-bottom: 10px;
    }

    .price-value {
      font-size: 32px;
      font-weight: 700;
      color: #EF4444;
      text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
    }

    /* Action Buttons */
    .action-buttons {
      display: flex;
      justify-content: center;
      gap: 20px;
      margin-bottom: 40px;
    }

    .btn {
      padding: 15px 30px;
      border: none;
      border-radius: 12px;
      font-size: 16px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      display: inline-flex;
      align-items: center;
      gap: 10px;
      min-width: 160px;
      justify-content: center;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .btn-cancel {
      background: linear-gradient(135deg, #EF4444, #DC2626);
      color: white;
      box-shadow: 0 4px 15px rgba(239, 68, 68, 0.4);
    }

    .btn-cancel:hover {
      background: linear-gradient(135deg, #DC2626, #B91C1C);
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(239, 68, 68, 0.6);
    }

    .btn-reschedule {
      background: linear-gradient(135deg, #F59E0B, #D97706);
      color: white;
      box-shadow: 0 4px 15px rgba(245, 158, 11, 0.4);
    }

    .btn-reschedule:hover {
      background: linear-gradient(135deg, #D97706, #B45309);
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(245, 158, 11, 0.6);
    }

    .btn:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      transform: none !important;
      box-shadow: none !important;
    }

    /* Back Button */
    .btn-back {
      background: none;
      border: none;
      color: #6B7280;
      font-size: 16px;
      cursor: pointer;
      display: inline-flex;
      align-items: center;
      gap: 8px;
      transition: all 0.2s ease;
      margin-top: 20px;
    }

    .btn-back:hover {
      color: #374151;
      transform: translateX(-3px);
    }

    /* Modal Styles */
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.6);
      z-index: 1000;
      justify-content: center;
      align-items: center;
      backdrop-filter: blur(5px);
    }

    .modal.show {
      display: flex;
    }

    .modal-content {
      background: white;
      border-radius: 20px;
      padding: 40px;
      max-width: 500px;
      width: 90%;
      text-align: center;
      box-shadow: 0 20px 60px rgba(0,0,0,0.3);
      position: relative;
      animation: modalAppear 0.3s ease-out;
    }

    @keyframes modalAppear {
      from {
        opacity: 0;
        transform: scale(0.8) translateY(-50px);
      }
      to {
        opacity: 1;
        transform: scale(1) translateY(0);
      }
    }

    .modal-icon {
      width: 80px;
      height: 80px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto 20px;
      color: white;
      font-size: 36px;
    }

    .modal-icon.cancel {
      background: linear-gradient(135deg, #EF4444, #DC2626);
    }

    .modal-icon.reschedule {
      background: linear-gradient(135deg, #F59E0B, #D97706);
    }

    .modal-title {
      font-size: 24px;
      font-weight: 600;
      color: #1F2937;
      margin-bottom: 15px;
    }

    .modal-message {
      font-size: 16px;
      color: #6B7280;
      margin-bottom: 30px;
      line-height: 1.5;
    }

    .reason-input {
      width: 100%;
      min-height: 120px;
      padding: 15px;
      border: 2px solid #E5E7EB;
      border-radius: 12px;
      font-size: 14px;
      resize: vertical;
      font-family: inherit;
      margin-bottom: 30px;
      transition: all 0.2s ease;
    }

    .reason-input:focus {
      outline: none;
      border-color: #3B82F6;
      box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
    }

    .reason-input::placeholder {
      color: #9CA3AF;
    }

    .modal-buttons {
      display: flex;
      gap: 15px;
      justify-content: center;
    }

    .btn-modal {
      padding: 12px 24px;
      border: none;
      border-radius: 8px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.2s ease;
      min-width: 100px;
    }

    .btn-modal-primary {
      background: #EF4444;
      color: white;
    }

    .btn-modal-primary:hover {
      background: #DC2626;
    }

    .btn-modal-primary.reschedule {
      background: #F59E0B;
    }

    .btn-modal-primary.reschedule:hover {
      background: #D97706;
    }

    .btn-modal-secondary {
      background: #F3F4F6;
      color: #374151;
      border: 1px solid #E5E7EB;
    }

    .btn-modal-secondary:hover {
      background: #E5E7EB;
    }

    /* Success Modal */
    .success-modal .modal-icon {
      background: linear-gradient(135deg, #10B981, #059669);
    }

    .success-modal .modal-title {
      color: #065F46;
    }

    .success-modal .modal-message {
      color: #047857;
    }

    /* Loading State */
    .loading {
      opacity: 0.7;
      pointer-events: none;
    }

    .btn.loading::after {
      content: "";
      width: 16px;
      height: 16px;
      margin-left: 8px;
      border: 2px solid transparent;
      border-top: 2px solid currentColor;
      border-radius: 50%;
      display: inline-block;
      animation: spin 1s linear infinite;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    /* Additional Info Section */
    .additional-info {
      background: #F8FAFC;
      border-radius: 16px;
      padding: 25px;
      margin-bottom: 30px;
      border-left: 5px solid #3B82F6;
    }

    .info-title {
      font-size: 18px;
      font-weight: 600;
      color: #1F2937;
      margin-bottom: 15px;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .info-text {
      color: #6B7280;
      line-height: 1.6;
      font-size: 14px;
    }

    /* Responsive */
    @media (max-width: 768px) {
      .container {
        padding: 0 15px;
      }

      .page-title {
        font-size: 32px;
      }

      .appointment-card {
        padding: 25px;
      }

      .appointment-grid {
        grid-template-columns: 1fr;
        gap: 20px;
      }

      .action-buttons {
        flex-direction: column;
        align-items: center;
      }

      .btn {
        width: 100%;
        max-width: 300px;
      }

      .modal-content {
        padding: 25px;
        margin: 20px;
      }

      .header-right .phone-number {
        display: none;
      }
    }
  </style>
</head>
<body>
  <!-- Header -->
  <div class="header">
        <div class="logo">
            <img src=".\img\UPaMLOGO.png" class="logo-img"> 
      <div class="phone-number">
        <i class="fas fa-phone"></i>
        1234
      </div>
    </div>
    
    <div class="header-right">
      <div class="header-icons">
        <button class="icon-btn" title="ค้นหา">
          <i class="fas fa-search"></i>
        </button>
        <button class="icon-btn notification-btn" title="การแจ้งเตือน">
          <i class="fas fa-bell"></i>
        </button>
        <button class="icon-btn" title="บัญชีผู้ใช้">
          <i class="fas fa-user"></i>
        </button>
      </div>
    </div>
  </div>

  <!-- Main Content -->
  <div class="container">
    <h1 class="page-title">ข้อมูลการจอง</h1>

    <!-- Status Badge -->
    <div class="text-center">
      <div class="status-badge confirmed" id="statusBadge">
        <i class="fas fa-check-circle"></i>
        ยืนยันการนัดหมายแล้ว
      </div>
    </div>

    <!-- Appointment Details Card -->
    <div class="appointment-card">
      <div class="appointment-grid">
        <div class="appointment-item">
          <div class="appointment-label">
            <i class="fas fa-hashtag"></i>
            รหัสการจอง:
          </div>
          <div class="appointment-value" id="bookingId">00010</div>
        </div>
        
        <div class="appointment-item">
          <div class="appointment-label">
            <i class="fas fa-user"></i>
            ชื่อ-นามสกุล
          </div>
          <div class="appointment-value">ประสิทธิโชค กรรชียง</div>
        </div>
        
        <div class="appointment-item">
          <div class="appointment-label">
            <i class="fas fa-stethoscope"></i>
            ปัญหาสุขภาพ:
          </div>
          <div class="appointment-value" id="healthProblem">กล้ามเนื้อขาอ่อนแรง</div>
        </div>
        
        <div class="appointment-item">
          <div class="appointment-label">
            <i class="fas fa-clock"></i>
            เวลา:
          </div>
          <div class="appointment-value" id="appointmentTime">11:00-12:00 น.</div>
        </div>
        
        <div class="appointment-item">
          <div class="appointment-label">
            <i class="fas fa-hospital"></i>
            บริการ:
          </div>
          <div class="appointment-value" id="serviceName">กายภาพขา</div>
        </div>
        
        <div class="appointment-item">
          <div class="appointment-label">
            <i class="fas fa-calendar-alt"></i>
            วันที่:
          </div>
          <div class="appointment-value" id="appointmentDate">18/04/2025</div>
        </div>
        
        <div class="price-section">
          <div class="price-label">ค่าบริการที่ต้องชำระ:</div>
          <div class="price-value" id="servicePrice">1,250 บาท</div>
        </div>
      </div>
    </div>

    <!-- Additional Info -->
    <div class="additional-info">
      <div class="info-title">
        <i class="fas fa-info-circle"></i>
        ข้อมูลสำคัญ
      </div>
      <div class="info-text">
        การจองคิวองค์นี้ได้ถูกส่งให้เจ้าหน้าที่เรียบร้อยแล้ว 
        โปรดรอการยืนยันจากเจ้าหน้าที่ และมาตามเวลาที่นัดหมาย 
        หากต้องการยกเลิกหรือเลื่อนการนัดหมาย กรุณาแจ้งล่วงหน้าอย่างน้อย 24 ชั่วโมง
      </div>
    </div>

    <!-- Action Buttons -->
    <div class="action-buttons">
      <button class="btn btn-cancel" onclick="openCancelModal()">
        <i class="fas fa-times"></i>
        ยกเลิกการจอง
      </button>
      <button class="btn btn-reschedule" onclick="openRescheduleModal()">
        <i class="fas fa-edit"></i>
        เลื่อนการจอง
      </button>
    </div>

    <div style="text-align: center;">
      <button class="btn-back" onclick="goBack()">
        <i class="fas fa-chevron-left"></i>
        ย้อนกลับ
      </button>
    </div>
  </div>

  <!-- Cancel Modal -->
  <div class="modal" id="cancelModal">
    <div class="modal-content">
      <div class="modal-icon cancel">
        <i class="fas fa-times"></i>
      </div>
      <h3 class="modal-title">ยกเลิกการนัดหมาย</h3>
      <p class="modal-message">
        กรุณาระบุเหตุผลในการยกเลิกการนัดหมาย<br>
        เพื่อช่วยให้เราปรับปรุงบริการได้ดียิ่งขึ้น
      </p>
      <textarea 
        class="reason-input" 
        id="cancelReason" 
        placeholder="กรุณาระบุเหตุผลในการยกเลิก... (เช่น มีธุระฉุกเฉิน, เปลี่ยนแปลงแผน, ไม่สะดวก)"
        maxlength="500">
      </textarea>
      <div class="modal-buttons">
        <button class="btn-modal btn-modal-primary" onclick="confirmCancel()">
          ยืนยันยกเลิก
        </button>
        <button class="btn-modal btn-modal-secondary" onclick="closeModal()">
          ปิด
        </button>
      </div>
    </div>
  </div>

  <!-- Reschedule Modal -->
  <div class="modal" id="rescheduleModal">
    <div class="modal-content">
      <div class="modal-icon reschedule">
        <i class="fas fa-edit"></i>
      </div>
      <h3 class="modal-title">เลื่อนการนัดหมาย</h3>
      <p class="modal-message">
        กรุณาระบุเหตุผลในการเลื่อนการนัดหมาย<br>
        ระบบจะนำคุณไปยังหน้าจองคิวใหม่หลังจากนี้
      </p>
      <textarea 
        class="reason-input" 
        id="rescheduleReason" 
        placeholder="กรุณาระบุเหตุผลในการเลื่อน... (เช่น มีงานกะทันหัน, ไม่สะดวก, เปลี่ยนแผน)"
        maxlength="500">
      </textarea>
      <div class="modal-buttons">
        <button class="btn-modal btn-modal-primary reschedule" onclick="confirmReschedule()">
          ยืนยันเลื่อน
        </button>
        <button class="btn-modal btn-modal-secondary" onclick="closeModal()">
          ปิด
        </button>
      </div>
    </div>
  </div>

  <!-- Success Modal -->
  <div class="modal success-modal" id="successModal">
    <div class="modal-content">
      <div class="modal-icon">
        <i class="fas fa-check"></i>
      </div>
      <h3 class="modal-title" id="successTitle">ดำเนินการสำเร็จ!</h3>
      <p class="modal-message" id="successMessage">
        การยกเลิกการนัดหมายของคุณเสร็จสิ้นแล้ว<br>
        ขอบคุณสำหรับการแจ้งให้ทราบ
      </p>
      <div class="modal-buttons">
        <button class="btn-modal btn-modal-primary" onclick="goToAppointments()">
          ดูการนัดหมายทั้งหมด
        </button>
        <button class="btn-modal btn-modal-secondary" onclick="closeModal()">
          ปิด
        </button>
      </div>
    </div>
  </div>

  <script>
    // Global variables
    let currentAppointment = {
      id: '00010',
      patientName: 'ประสิทธิโชค กรรชียง',
      service: 'กายภาพขา',
      problem: 'กล้ามเนื้อขาอ่อนแรง',
      date: '18/04/2025',
      time: '11:00-12:00 น.',
      price: '1,250',
      status: 'confirmed'
    };

    // Initialize page
    function initializePage() {
      updateAppointmentDisplay();
      setupModalEvents();
    }

    // Update appointment display
    function updateAppointmentDisplay() {
      document.getElementById('bookingId').textContent = currentAppointment.id;
      document.getElementById('serviceName').textContent = currentAppointment.service;
      document.getElementById('healthProblem').textContent = currentAppointment.problem;
      document.getElementById('appointmentDate').textContent = currentAppointment.date;
      document.getElementById('appointmentTime').textContent = currentAppointment.time;
      document.getElementById('servicePrice').textContent = currentAppointment.price + ' บาท';
      
      updateStatusBadge(currentAppointment.status);
    }

    // Update status badge
    function updateStatusBadge(status) {
      const badge = document.getElementById('statusBadge');
      const actionButtons = document.querySelector('.action-buttons');
      
      badge.className = 'status-badge';
      
      switch(status) {
        case 'confirmed':
          badge.classList.add('confirmed');
          badge.innerHTML = '<i class="fas fa-check-circle"></i> ยืนยันการนัดหมายแล้ว';
          actionButtons.style.display = 'flex';
          break;
        case 'cancelled':
          badge.classList.add('cancelled');
          badge.innerHTML = '<i class="fas fa-times-circle"></i> ยกเลิกการนัดหมายแล้ว';
          actionButtons.style.display = 'none';
          break;
        case 'rescheduled':
          badge.classList.add('rescheduled');
          badge.innerHTML = '<i class="fas fa-clock"></i> เลื่อนการนัดหมายแล้ว';
          actionButtons.style.display = 'none';
          break;
      }
    }

    // Modal functions
    function openCancelModal() {
      document.getElementById('cancelModal').classList.add('show');
      document.getElementById('cancelReason').focus();
    }

    function openRescheduleModal() {
      document.getElementById('rescheduleModal').classList.add('show');
      document.getElementById('rescheduleReason').focus();
    }

    function closeModal() {
      document.querySelectorAll('.modal').forEach(modal => {
        modal.classList.remove('show');
      });
      
      // Clear textarea values
      document.getElementById('cancelReason').value = '';
      document.getElementById('rescheduleReason').value = '';
    }

    function confirmCancel() {
      const reason = document.getElementById('cancelReason').value.trim();
      
      if (!reason) {
        alert('กรุณาระบุเหตุผลในการยกเลิก');
        return;
      }
      
      // Show loading state
      const btn = event.target;
      btn.classList.add('loading');
      btn.textContent = 'กำลังดำเนินการ...';
      
      // Simulate API call
      setTimeout(() => {
        btn.classList.remove('loading');
        btn.textContent = 'ยืนยันยกเลิก';
        
        // Close cancel modal
        document.getElementById('cancelModal').classList.remove('show');
        
        // Update appointment status
        currentAppointment.status = 'cancelled';
        updateStatusBadge('cancelled');
        
        // Show success modal
        document.getElementById('successTitle').textContent = 'ยกเลิกสำเร็จ!';
        document.getElementById('successMessage').innerHTML = 
          'การยกเลิกการนัดหมายของคุณเสร็จสิ้นแล้ว<br>ขอบคุณสำหรับการแจ้งให้ทราบ';
        document.getElementById('successModal').classList.add('show');
        
        // Clear form
        document.getElementById('cancelReason').value = '';
        
        console.log('Cancelled with reason:', reason);
      }, 2000);
    }

    function confirmReschedule() {
      const reason = document.getElementById('rescheduleReason').value.trim();
      
      if (!reason) {
        alert('กรุณาระบุเหตุผลในการเลื่อน');
        return;
      }
      
      // Show loading state
      const btn = event.target;
      btn.classList.add('loading');
      btn.textContent = 'กำลังดำเนินการ...';
      
      // Simulate API call
      setTimeout(() => {
        btn.classList.remove('loading');
        btn.textContent = 'ยืนยันเลื่อน';
        
        // Close reschedule modal
        document.getElementById('rescheduleModal').classList.remove('show');
        
        // Update appointment status
        currentAppointment.status = 'rescheduled';
        updateStatusBadge('rescheduled');
        
        // Show success modal
        document.getElementById('successTitle').textContent = 'เลื่อนสำเร็จ!';
        document.getElementById('successMessage').innerHTML = 
          'การเลื่อนการนัดหมายของคุณเสร็จสิ้นแล้ว<br>ระบบจะนำคุณไปจองคิวใหม่ในไม่ช้า';
        document.getElementById('successModal').classList.add('show');
        
        // Clear form
        document.getElementById('rescheduleReason').value = '';
        
        console.log('Rescheduled with reason:', reason);
        
        // Redirect to booking page after showing success
        setTimeout(() => {
          alert('กำลังนำคุณไปยังหน้าจองคิวใหม่...');
          // window.location.href = 'booking.html';
        }, 3000);
      }, 2000);
    }

    // Navigation functions
    function goBack() {
      if (confirm('ต้องการกลับไปหน้าก่อนหน้านี้?')) {
        window.history.back();
      }
    }

    function goToAppointments() {
      alert('กำลังนำคุณไปยังหน้าการนัดหมายทั้งหมด...');
      closeModal();
      // window.location.href = 'appointments.html';
    }

    // Setup modal events
    function setupModalEvents() {
      // Close modal when clicking outside
      document.querySelectorAll('.modal').forEach(modal => {
        modal.addEventListener('click', function(e) {
          if (e.target === this) {
            closeModal();
          }
        });
      });

      // Close modal with Escape key
      document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
          closeModal();
        }
      });

      // Textarea character count (optional enhancement)
      const textareas = document.querySelectorAll('.reason-input');
      textareas.forEach(textarea => {
        textarea.addEventListener('input', function() {
          const maxLength = this.getAttribute('maxlength');
          const currentLength = this.value.length;
          
          // You could add character counter here if needed
          console.log(`Characters: ${currentLength}/${maxLength}`);
        });
      });
    }

    // Simulate real-time updates
    function simulateStatusUpdates() {
      // This could be used to check for real-time status updates from server
      setInterval(() => {
        // Check for status updates via API
        console.log('Checking for status updates...');
      }, 30000); // Check every 30 seconds
    }

    // Format date functions
    function formatThaiDate(dateString) {
      const months = [
        'มกราคม', 'กุมภาพันธ์', 'มีนาคม', 'เมษายน', 'พฤษภาคม', 'มิถุนายน',
        'กรกฎาคม', 'สิงหาคม', 'กันยายน', 'ตุลาคม', 'พฤศจิกายน', 'ธันวาคม'
      ];
      
      const [day, month, year] = dateString.split('/');
      const monthName = months[parseInt(month) - 1];
      return `${parseInt(day)} ${monthName} ${year}`;
    }

    // Print appointment details
    function printAppointment() {
      window.print();
    }

    // Share appointment details
    function shareAppointment() {
      if (navigator.share) {
        navigator.share({
          title: 'ข้อมูลการนัดหมาย - UPaM',
          text: `การนัดหมาย ${currentAppointment.service} วันที่ ${currentAppointment.date} เวลา ${currentAppointment.time}`,
          url: window.location.href
        });
      } else {
        // Fallback for browsers that don't support Web Share API
        const shareData = `การนัดหมาย UPaM\nบริการ: ${currentAppointment.service}\nวันที่: ${currentAppointment.date}\nเวลา: ${currentAppointment.time}\nรหัส: ${currentAppointment.id}`;
        
        if (navigator.clipboard) {
          navigator.clipboard.writeText(shareData).then(() => {
            alert('คัดลอกข้อมูลการนัดหมายแล้ว');
          });
        } else {
          prompt('คัดลอกข้อมูลการนัดหมาย:', shareData);
        }
      }
    }

    // Add to calendar function
    function addToCalendar() {
      const [day, month, year] = currentAppointment.date.split('/');
      const [startTime] = currentAppointment.time.split('-');
      const [hours, minutes] = startTime.split(':');
      
      const eventDate = new Date(year, month - 1, day, hours, minutes);
      const endDate = new Date(eventDate.getTime() + (60 * 60 * 1000)); // Add 1 hour
      
      const formatDate = (date) => {
        return date.toISOString().replace(/[-:]/g, '').split('.')[0] + 'Z';
      };
      
      const startDateFormatted = formatDate(eventDate);
      const endDateFormatted = formatDate(endDate);
      
      const calendarUrl = `https://calendar.google.com/calendar/render?action=TEMPLATE` +
        `&text=การนัดหมาย ${currentAppointment.service}` +
        `&dates=${startDateFormatted}/${endDateFormatted}` +
        `&details=รหัสการจอง: ${currentAppointment.id}%0A` +
        `บริการ: ${currentAppointment.service}%0A` +
        `ปัญหาสุขภาพ: ${currentAppointment.problem}` +
        `&location=UPaM Clinic`;
      
      window.open(calendarUrl, '_blank');
    }

    // Initialize page when DOM is loaded
    document.addEventListener('DOMContentLoaded', function() {
      initializePage();
      
      // Header button interactions
      document.querySelectorAll('.icon-btn').forEach(btn => {
        btn.addEventListener('click', function() {
          console.log('Clicked:', this.title || 'Header button');
        });
      });
      
      // Start status update simulation
      // simulateStatusUpdates();
    });

    // Prevent form submission on Enter key in textareas
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Enter' && e.target.classList.contains('reason-input')) {
        if (!e.shiftKey) {
          e.preventDefault();
          // You could trigger submit here if needed
        }
      }
    });

    // Auto-resize textarea
    function autoResizeTextarea(textarea) {
      textarea.style.height = 'auto';
      textarea.style.height = textarea.scrollHeight + 'px';
    }

    // Add auto-resize to textareas
    document.querySelectorAll('.reason-input').forEach(textarea => {
      textarea.addEventListener('input', function() {
        autoResizeTextarea(this);
      });
    });
  </script>
</body>
</html>