<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ประวัติการจองและผลการรักษา - UPaM</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0; padding: 0; box-sizing: border-box;
    }
    body {
      font-family: 'Inter', sans-serif;
      background: #f8fafc;
      min-height: 100vh;
      font-size: 14px;
    }

    /* Header */
    .header {
      background: white;
      padding: 12px 24px;
      box-shadow: 0 5px 10px rgba(0, 0, 0, 0.477);
      display: flex;
      justify-content: space-between;
      align-items: center;
      position: sticky;
      top: 0;
      z-index: 100;
      background: linear-gradient(135deg, #ffff 0%, #183ccbba 100%);
    }

    .logo {
      display: flex;
      align-items: center;
    }

    .logo-img {
      width: 60px;
      height: 60px;
      margin-right: 10px;
    }

    .phone-number {
      color: #6B7280;
      font-size: 16px;
      display: flex;
      align-items: center;
      gap: 5px;
    }

    .header-right {
      display: flex;
      align-items: center;
      gap: 20px;
    }

    .header-icons {
      display: flex;
      gap: 8px;
    }

    .icon-btn {
      width: 36px;
      height: 36px;
      border-radius: 50%;
      background: #F3F4F6;
      border: none;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.2s ease;
      color: #6B7280;
    }

    .icon-btn:hover {
      background: #E5E7EB;
      transform: translateY(-1px);
    }

    .notification-btn {
      position: relative;
    }

    .notification-btn::after {
      content: '';
      position: absolute;
      top: 6px;
      right: 6px;
      width: 8px;
      height: 8px;
      background: #EF4444;
      border-radius: 50%;
      border: 2px solid white;
    }

    /* Profile Dropdown Styles */
    .profile-dropdown {
      position: relative;
      display: inline-block;
    }

    .dropdown-content {
      display: none;
      position: absolute;
      right: 0;
      background-color: white;
      min-width: 180px;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);
      z-index: 1000;
      border-radius: 12px;
      overflow: hidden;
      border: 1px solid #e5e7eb;
      margin-top: 8px;
    }

    .dropdown-content.show {
      display: block;
      animation: dropdownFadeIn 0.3s ease-out;
    }

    @keyframes dropdownFadeIn {
      from {
        opacity: 0;
        transform: translateY(-10px);
      }

      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .dropdown-item {
      color: #374151;
      padding: 12px 20px;
      text-decoration: none;
      display: block;
      transition: all 0.3s ease;
      border: none;
      background: none;
      width: 100%;
      text-align: left;
      font-size: 14px;
      cursor: pointer;
    }

    .dropdown-item:hover {
      background-color: #f9fafb;
      color: #1f2937;
    }

    .dropdown-item i {
      margin-right: 10px;
      width: 16px;
      color: #6b7280;
    }

    .dropdown-item.logout {
      border-top: 1px solid #e5e7eb;
      color: #dc2626;
    }

    .dropdown-item.logout:hover {
      background-color: #fef2f2;
      color: #dc2626;
    }

    .dropdown-item.logout i {
      color: #dc2626;
    }

    /* Container */
    .container {
      max-width: 1200px;
      margin: 40px auto;
      padding: 0 20px;
    }

    .page-title {
      text-align: center;
      font-size: 48px;
      color: #3B82F6;
      font-weight: 600;
      margin-bottom: 10px;
    }

    .subtitle {
      text-align: center;
      color: #6B7280;
      font-size: 18px;
      margin-bottom: 40px;
    }

    /* Patient Info Card */
    .patient-info-card {
      background: white;
      border-radius: 16px;
      padding: 24px;
      margin-bottom: 24px;
      box-shadow: 0 4px 16px rgba(0,0,0,0.08);
      border-left: 4px solid #3B82F6;
    }

    .patient-header {
      display: flex;
      align-items: center;
      gap: 16px;
      margin-bottom: 20px;
    }

    .patient-avatar {
      width: 80px;
      height: 80px;
      border-radius: 50%;
      background: linear-gradient(135deg, #3B82F6 0%, #1D4ED8 100%);
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 32px;
      font-weight: bold;
    }

    .patient-details h2 {
      font-size: 24px;
      color: #1F2937;
      margin-bottom: 4px;
    }

    .patient-id {
      color: #6B7280;
      font-size: 16px;
      margin-bottom: 8px;
    }

    .patient-stats {
      display: flex;
      gap: 24px;
    }

    .stat-item {
      display: flex;
      align-items: center;
      gap: 6px;
      color: #6B7280;
      font-size: 14px;
    }

    .stat-value {
      color: #1F2937;
      font-weight: 600;
    }

    .patient-info-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 16px;
      margin-top: 20px;
      padding-top: 20px;
      border-top: 1px solid #E5E7EB;
    }

    .info-item {
      display: flex;
      flex-direction: column;
      gap: 4px;
    }

    .info-label {
      font-size: 14px;
      color: #6B7280;
      font-weight: 500;
    }

    .info-value {
      font-size: 16px;
      color: #1F2937;
      font-weight: 500;
    }

    /* Search and Filter Section */
    .filter-section {
      background: white;
      border-radius: 16px;
      padding: 24px;
      margin-bottom: 24px;
      box-shadow: 0 4px 16px rgba(0,0,0,0.08);
    }

    .filter-row {
      display: flex;
      gap: 20px;
      align-items: center;
      flex-wrap: wrap;
    }

    .search-input {
      flex: 1;
      min-width: 250px;
      padding: 12px 16px;
      border: 2px solid #E5E7EB;
      border-radius: 8px;
      font-size: 16px;
      background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="gray"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/></svg>') no-repeat right 12px center;
      background-size: 20px;
      padding-right: 40px;
    }

    .search-input:focus {
      outline: none;
      border-color: #3B82F6;
    }

    .date-range {
      display: flex;
      gap: 12px;
      align-items: center;
    }

    .date-filter {
      padding: 12px 16px;
      border: 2px solid #E5E7EB;
      border-radius: 8px;
      font-size: 16px;
      background: white;
      cursor: pointer;
    }

    .date-filter:focus {
      outline: none;
      border-color: #3B82F6;
    }

    .status-filter {
      padding: 12px 16px;
      border: 2px solid #E5E7EB;
      border-radius: 8px;
      font-size: 16px;
      background: white;
      min-width: 150px;
    }

    .status-filter:focus {
      outline: none;
      border-color: #3B82F6;
    }

    /* History Timeline */
    .history-timeline {
      position: relative;
    }

    .timeline-item {
      background: white;
      border-radius: 16px;
      padding: 24px;
      margin-bottom: 20px;
      box-shadow: 0 4px 16px rgba(0,0,0,0.08);
      position: relative;
      margin-left: 30px;
      border-left: 4px solid #10B981;
      transition: all 0.2s ease;
    }

    .timeline-item:hover {
      transform: translateX(4px);
      box-shadow: 0 8px 24px rgba(0,0,0,0.12);
    }

    .timeline-item.pending {
      border-left-color: #F59E0B;
    }

    .timeline-item.cancelled {
      border-left-color: #EF4444;
    }

    .timeline-item::before {
      content: '';
      position: absolute;
      left: -12px;
      top: 30px;
      width: 16px;
      height: 16px;
      border-radius: 50%;
      background: #10B981;
      border: 3px solid white;
      box-shadow: 0 0 0 2px #10B981;
    }

    .timeline-item.pending::before {
      background: #F59E0B;
      box-shadow: 0 0 0 2px #F59E0B;
    }

    .timeline-item.cancelled::before {
      background: #EF4444;
      box-shadow: 0 0 0 2px #EF4444;
    }

    .timeline-header {
      display: flex;
      justify-content: between;
      align-items: flex-start;
      margin-bottom: 16px;
      gap: 16px;
    }

    .timeline-date {
      display: flex;
      flex-direction: column;
      gap: 4px;
      min-width: 120px;
    }

    .date-main {
      font-size: 18px;
      font-weight: 700;
      color: #1F2937;
    }

    .date-time {
      font-size: 14px;
      color: #6B7280;
    }

    .timeline-content {
      flex: 1;
    }

    .timeline-title {
      font-size: 20px;
      font-weight: 600;
      color: #1F2937;
      margin-bottom: 8px;
    }

    .timeline-service {
      color: #3B82F6;
      font-weight: 600;
      margin-bottom: 12px;
      font-size: 16px;
    }

    .timeline-status {
      padding: 6px 12px;
      border-radius: 20px;
      font-size: 14px;
      font-weight: 600;
      display: inline-block;
      margin-left: auto;
    }

    .status-completed {
      background: #D1FAE5;
      color: #065F46;
    }

    .status-pending {
      background: #FEF3C7;
      color: #92400E;
    }

    .status-cancelled {
      background: #FEE2E2;
      color: #991B1B;
    }

    .timeline-details {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 16px;
      margin-bottom: 16px;
    }

    .detail-item {
      display: flex;
      flex-direction: column;
      gap: 4px;
    }

    .detail-label {
      font-size: 14px;
      color: #6B7280;
      font-weight: 500;
    }

    .detail-value {
      font-size: 16px;
      color: #1F2937;
      font-weight: 500;
    }

    .price-value {
      color: #EF4444;
      font-weight: 700;
    }

    /* File Management Section */
    .file-section {
      background: #F9FAFB;
      padding: 20px;
      border-radius: 12px;
      border-left: 4px solid #3B82F6;
      margin-top: 16px;
    }

    .file-title {
      font-size: 16px;
      font-weight: 600;
      color: #1F2937;
      margin-bottom: 12px;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .file-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
      gap: 12px;
    }

    .file-item {
      background: white;
      padding: 16px;
      border-radius: 8px;
      border: 1px solid #E5E7EB;
      display: flex;
      align-items: center;
      gap: 12px;
      transition: all 0.2s ease;
      cursor: pointer;
    }

    .file-item:hover {
      border-color: #3B82F6;
      box-shadow: 0 2px 8px rgba(59, 130, 246, 0.1);
    }

    .file-icon {
      width: 40px;
      height: 40px;
      border-radius: 8px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 18px;
      color: white;
    }

    .file-icon.pdf {
      background: #EF4444;
    }

    .file-icon.image {
      background: #10B981;
    }

    .file-icon.doc {
      background: #3B82F6;
    }

    .file-info {
      flex: 1;
      min-width: 0;
    }

    .file-name {
      font-size: 14px;
      font-weight: 600;
      color: #1F2937;
      margin-bottom: 4px;
      word-break: break-word;
    }

    .file-meta {
      display: flex;
      justify-content: space-between;
      align-items: center;
      font-size: 12px;
      color: #6B7280;
    }

    .file-actions {
      display: flex;
      gap: 8px;
    }

    .file-action-btn {
      width: 28px;
      height: 28px;
      border: none;
      border-radius: 6px;
      background: #F3F4F6;
      color: #6B7280;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 12px;
      transition: all 0.2s ease;
    }

    .file-action-btn:hover {
      background: #E5E7EB;
      color: #374151;
    }

    /* Actions */
    .timeline-actions {
      display: flex;
      gap: 12px;
      justify-content: flex-end;
      margin-top: 16px;
      padding-top: 16px;
      border-top: 1px solid #E5E7EB;
    }

    .btn {
      padding: 8px 16px;
      border: none;
      border-radius: 8px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.2s ease;
      display: inline-flex;
      align-items: center;
      gap: 6px;
    }

    .btn-view {
      background: #F3F4F6;
      color: #374151;
      border: 1px solid #E5E7EB;
    }

    .btn-view:hover {
      background: #E5E7EB;
    }

    .btn-print {
      background: #3B82F6;
      color: white;
    }

    .btn-print:hover {
      background: #2563EB;
    }

    .btn-download {
      background: #10B981;
      color: white;
    }

    .btn-download:hover {
      background: #059669;
    }

    /* Summary Cards */
    .summary-section {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 20px;
      margin-bottom: 32px;
    }

    .summary-card {
      background: white;
      border-radius: 16px;
      padding: 24px;
      box-shadow: 0 4px 16px rgba(0,0,0,0.08);
      text-align: center;
      border-left: 4px solid #3B82F6;
      transition: all 0.2s ease;
    }

    .summary-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 24px rgba(0,0,0,0.12);
    }

    .summary-card.success {
      border-left-color: #10B981;
    }

    .summary-card.warning {
      border-left-color: #F59E0B;
    }

    .summary-card.danger {
      border-left-color: #EF4444;
    }

    .summary-icon {
      width: 60px;
      height: 60px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto 16px;
      font-size: 24px;
      color: white;
    }

    .summary-card .summary-icon {
      background: #3B82F6;
    }

    .summary-card.success .summary-icon {
      background: #10B981;
    }

    .summary-card.warning .summary-icon {
      background: #F59E0B;
    }

    .summary-card.danger .summary-icon {
      background: #EF4444;
    }

    .summary-value {
      font-size: 28px;
      font-weight: 700;
      color: #1F2937;
      margin-bottom: 8px;
    }

    .summary-label {
      color: #6B7280;
      font-size: 16px;
    }

    /* Empty State */
    .empty-state {
      text-align: center;
      padding: 60px 20px;
      color: #6B7280;
    }

    .empty-icon {
      font-size: 48px;
      margin-bottom: 16px;
      color: #D1D5DB;
    }

    .empty-title {
      font-size: 20px;
      font-weight: 600;
      margin-bottom: 8px;
    }

    .empty-message {
      font-size: 16px;
    }

    /* Responsive */
    @media (max-width: 768px) {
      .container {
        padding: 0 16px;
      }

      .page-title {
        font-size: 32px;
      }

      .filter-row {
        flex-direction: column;
      }

      .search-input {
        min-width: 100%;
      }

      .patient-header {
        flex-direction: column;
        text-align: center;
      }

      .patient-stats {
        justify-content: center;
        flex-wrap: wrap;
      }

      .timeline-item {
        margin-left: 20px;
      }

      .timeline-header {
        flex-direction: column;
        gap: 8px;
      }

      .timeline-details {
        grid-template-columns: 1fr;
      }

      .treatment-content {
        grid-template-columns: 1fr;
      }

      .timeline-actions {
        flex-wrap: wrap;
      }

      .summary-section {
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      }
    }
  </style>
</head>
<body>
  <!-- Header -->
  <div class="header">
    <div class="logo">
      <img src="public/img/UPaMLOGO.png" class="logo-img">
      <div class="phone-number">
        <i class="fas fa-phone"></i>
        1234
      </div>
    </div>

    <div class="header-right">
      <div class="header-right">
            <div class="header-icons">
                <button class="icon-btn" title="ค้นหา">
                <i class="fas fa-search"></i>
                </button>

                <button class="icon-btn notification-btn" title="การแจ้งเตือน">
                <i class="fas fa-bell"></i>
                </button>

                <!-- ปุ่มโปรไฟล์ -->
                <div class="profile-dropdown">
                <button class="icon-btn" id="profileBtn" title="บัญชีผู้ใช้">
                    <i class="fas fa-user"></i>
                </button>
                <div class="dropdown-content" id="profileDropdown">
                    <a href="/userhistory" class="dropdown-item">
                    <i class="fas fa-id-card"></i> โปรไฟล์
                    </a>
                    <button class="dropdown-item logout" onclick="logout(event)">
                    <i class="fas fa-sign-out-alt"></i> ออกจากระบบ
                    </button>
                </div>
                </div>
            </div>
        </div>
    
  </div>

  <!-- Main Content -->
  <div class="container">
    <h1 class="page-title">ประวัติการจองและผลการรักษา</h1>
    <p class="subtitle">ประวัติการรักษาและผลการดูแลสุขภาพของผู้ป่วย</p>

    <!-- Patient Info Card -->
    <div class="patient-info-card">
      <div class="patient-header">
        <div class="patient-avatar" id="patientAvatar">
          P
        </div>
        <div class="patient-details">
          <h2 id="patientName">ประสิทธิโชค กรรเชียง</h2>
          <div class="patient-id">รหัสผู้ป่วย: <span id="patientId">PAT-00123</span></div>
          <div class="patient-stats">
            <div class="stat-item">
              <i class="fas fa-calendar-alt"></i>
              <span>เข้ารักษาครั้งแรก: <span class="stat-value">15/05/2024</span></span>
            </div>
            <div class="stat-item">
              <i class="fas fa-clock"></i>
              <span>นัดหมายล่าสุด: <span class="stat-value">20/08/2025</span></span>
            </div>
            <div class="stat-item">
              <i class="fas fa-heartbeat"></i>
              <span>สถานะ: <span class="stat-value" style="color: #10B981;">กำลังรักษา</span></span>
            </div>
          </div>
        </div>
      </div>
      
      <div class="patient-info-grid">
        <div class="info-item">
          <div class="info-label">อายุ</div>
          <div class="info-value">45 ปี</div>
        </div>
        <div class="info-item">
          <div class="info-label">เพศ</div>
          <div class="info-value">ชาย</div>
        </div>
        <div class="info-item">
          <div class="info-label">เบอร์โทรศัพท์</div>
          <div class="info-value">081-234-5678</div>
        </div>
        <div class="info-item">
          <div class="info-label">อาการหลัก</div>
          <div class="info-value">กล้ามเนื้อขาอ่อนแรง</div>
        </div>
      </div>
    </div>

    <!-- Summary Cards -->
    <div class="summary-section">
      <div class="summary-card success">
        <div class="summary-icon">
          <i class="fas fa-check-circle"></i>
        </div>
        <div class="summary-value">8</div>
        <div class="summary-label">การรักษาสำเร็จ</div>
      </div>
      <div class="summary-card warning">
        <div class="summary-icon">
          <i class="fas fa-clock"></i>
        </div>
        <div class="summary-value">2</div>
        <div class="summary-label">กำลังรักษา</div>
      </div>
      <div class="summary-card danger">
        <div class="summary-icon">
          <i class="fas fa-times-circle"></i>
        </div>
        <div class="summary-value">1</div>
        <div class="summary-label">ยกเลิก</div>
      </div>
      <div class="summary-card">
        <div class="summary-icon">
          <i class="fas fa-calendar-check"></i>
        </div>
        <div class="summary-value">11</div>
        <div class="summary-label">ทั้งหมด</div>
      </div>
    </div>

    <!-- Filter Section -->
    <div class="filter-section">
      <div class="filter-row">
        <input type="text" class="search-input" placeholder="ค้นหาด้วยชื่อบริการ หรือ อาการ..." id="searchInput">
        
        <div class="date-range">
          <input type="date" class="date-filter" id="dateFrom" title="วันที่เริ่มต้น">
          <span style="color: #6B7280;">ถึง</span>
          <input type="date" class="date-filter" id="dateTo" title="วันที่สิ้นสุด">
        </div>
        
        <select class="status-filter" id="statusFilter">
          <option value="">-- ทุกสถานะ --</option>
          <option value="completed">รักษาเสร็จสิ้น</option>
          <option value="waiting">รอรับการรักษา</option>
          <option value="cancelled">ยกเลิก</option>
        </select>
      </div>
    </div>

    <!-- History Timeline -->
    <div class="history-timeline" id="historyTimeline">
      <!-- Timeline items will be populated here -->
    </div>
  </div>
  <div id="detailModal" class="modal" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background: rgba(0,0,0,0.5); justify-content:center; align-items:center;">
    <div class="modal-content" style="background:#fff; padding:20px; border-radius:8px; max-width:600px; width:90%; max-height:80%; overflow:auto; position:relative;">
      <span class="close" onclick="closeDetailModal()" style="position:absolute; top:10px; right:15px; cursor:pointer; font-size:24px;">&times;</span>
      <div id="detailContent"></div>
    </div>
  </div>

  <script>
    
    const API_BASE = ''; 
    let historyData = [];
    let currentPatient = {};

    document.querySelector('.logout').addEventListener('click', async function(event) {
        if (!confirm('คุณต้องการออกจากระบบหรือไม่?')) return;

        const btn = event.currentTarget;
        btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> กำลังออกจากระบบ...';

        try {
            const res = await fetch('/logout', { method: 'GET' });
            if (res.ok) {
            window.location.href = '/login';
            } else {
            alert('ออกจากระบบไม่สำเร็จ');
            btn.innerHTML = 'ออกจากระบบ';
            }
        } catch (err) {
            console.error(err);
            alert('เกิดข้อผิดพลาด');
            btn.innerHTML = 'ออกจากระบบ';
        }
        });
    
    function formatDateDisplay(isoDate) {
      if (!isoDate) return '';
      if (isoDate.includes('/')) return isoDate;
      const d = new Date(isoDate);
      if (isNaN(d)) return isoDate;
      return `${String(d.getDate()).padStart(2,'0')}/${String(d.getMonth()+1).padStart(2,'0')}/${d.getFullYear()}`;
    }
    function parseIsoOrThaiToDate(dateStr) {
      if (!dateStr) return null;
      if (dateStr.includes('/')) {
        const [d,m,y] = dateStr.split('/');
        return new Date(parseInt(y,10), parseInt(m,10)-1, parseInt(d,10));
      } else return new Date(dateStr);
    }
    function escapeHtml(s) { if (s == null) return ''; return String(s).replace(/[&<>"]/g, c => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;'})[c]); }

    
    async function loadCurrentPatient() {
      try {
        const resp = await fetch(`${API_BASE}/api/me/profile`, { credentials: 'include' });
        if (!resp.ok) throw new Error('ไม่สามารถโหลดข้อมูลผู้ใช้ได้');
        const data = await resp.json();
        const u = data.user || {};
        const p = data.personal || {};

        currentPatient = {
          name: u.fullname || 'ไม่ระบุชื่อ',
          id: u.id ? `PAT-${String(u.id).padStart(5,'0')}` : 'PAT-XXXXX',
          age: p.age || '-',
          gender: p.gender || '-',
          phone: p.phone || '-',
          mainProblem: p.mainProblem || '-',
          firstVisit: formatDateDisplay(p.firstVisit) || '-',
          lastVisit: formatDateDisplay(p.lastVisit) || '-',
          status: p.status || '-'
        };
        renderPatientInfo();
      } catch(err) {
        console.error('loadCurrentPatient error', err);
        currentPatient = { name:'ไม่ระบุชื่อ', id:'PAT-XXXXX', age:'-', gender:'-', phone:'-', mainProblem:'-', firstVisit:'-', lastVisit:'-', status:'-' };
        renderPatientInfo();
      }
    }

    function renderPatientInfo() {
      const map = {
        patientName: currentPatient.name,
        patientId: currentPatient.id,
        patientAvatar: currentPatient.name.charAt(0) || 'P'
      };
      for (let id in map) {
        const el = document.getElementById(id);
        if (el) el.textContent = map[id];
      }
    }

    // ================= History =================
    async function fetchAndRenderHistory() {
      try {
        const [apptsResp, bloodResp] = await Promise.all([
          fetch(`${API_BASE}/api/me/appointments?limit=200`, { credentials: 'include' }).then(r => r.ok?r.json():({data:[]})).catch(()=>({data:[]})),
          fetch(`${API_BASE}/api/me/blood-appointments?limit=200`, { credentials: 'include' }).then(r => r.ok?r.json():({data:[]})).catch(()=>({data:[]}))
        ]);

        const appts = apptsResp.data || [];
        const bloods = bloodResp.data || [];

        const mappedA = appts.map(a=>({
          id: a.appointment_code||`A-${a.id}`,
          appointment_id: a.id,
          date: formatDateDisplay(a.appointment_date),
          time: a.time_slot||'',
          service: a.service_name||(a.service_id?`#${a.service_id}`:''),
          status: a.status||'',
          source: 'appointment'
        }));
        const mappedB = bloods.map(b=>{
          const files=[];
          if(b.result_file) files.push({id:null, filename:b.result_file, original_name:b.result_file});
          return {
            id:`B-${b.id}`,
            appointment_id:b.id,
            date: formatDateDisplay(b.appointment_date),
            time: b.time_slot||'',
            service: b.services||'',
            status: b.status||'',
            files, source:'blood', raw:b
          };
        });

        historyData = [...mappedA,...mappedB].sort((x,y)=>{
          const dx = parseIsoOrThaiToDate(x.date);
          const dy = parseIsoOrThaiToDate(y.date);
          if(!dx||!dy) return 0;
          return dx>dy?-1:dx<dy?1:0;
        });

        updateSummaryCards();
        renderHistory();
      } catch(err) {
        console.error('fetchAndRenderHistory error', err);
        renderHistory([]);
      }
    }

    // ================= Render & Summary =================
    function renderHistory(filteredData=historyData){
      const timeline = document.getElementById('historyTimeline');
      if(!timeline) return;
      if(!filteredData.length){
        timeline.innerHTML = `<div class="empty-state"><div class="empty-icon"><i class="fas fa-history"></i></div><div class="empty-title">ไม่พบประวัติการรักษา</div><div class="empty-message">ไม่มีข้อมูลที่ตรงกับเงื่อนไขการค้นหา</div></div>`;
        return;
      }

      let html='';
      filteredData.forEach(item=>{
        const statusClass = item.status==='เสร็จสิ้น'?'completed':(item.status==='ยกเลิกแล้ว'?'cancelled':'pending');
        html+=`<div class="timeline-item ${statusClass}">
          <div class="timeline-header">
            <div class="timeline-date"><div class="date-main">${item.date}</div><div class="date-time">${item.time}</div></div>
            <div class="timeline-content">
              <div class="timeline-title">รหัส ${item.id}</div>
              <div class="timeline-service">${escapeHtml(item.service)}</div>
              <button class="btn-detail" data-id="${item.appointment_id}" data-source="${item.source}" style="margin-top:5px; padding:5px 10px; border:none; background:#3B82F6; color:#fff; border-radius:4px; cursor:pointer;">ดูรายละเอียด</button>
            </div>
            <div class="timeline-status status-${statusClass}">${escapeHtml(item.status)}</div>
          </div>
        </div>`;
      });

      timeline.innerHTML = html;
      document.querySelectorAll('.btn-detail').forEach(btn=>{
        btn.addEventListener('click',()=>{openDetailModal(btn.dataset.id, btn.dataset.source)});
      });
    }

    function updateSummaryCards(){
      const completed = historyData.filter(i=>i.status==='เสร็จสิ้น').length;
      const cancelled = historyData.filter(i=>i.status==='ยกเลิกแล้ว').length;
      const ongoing = historyData.filter(i=>['จองแล้ว','ยืนยันแล้ว','อัปโหลดแล้ว','เลื่อนแล้ว'].includes(i.status)).length;
      const total = historyData.length;

      const elCompleted = document.querySelector('.summary-card.success .summary-value');
      const elOngoing = document.querySelector('.summary-card.warning .summary-value');
      const elCancelled = document.querySelector('.summary-card.danger .summary-value');
      const elTotal = document.querySelector('.summary-card:not(.success):not(.warning):not(.danger) .summary-value');

      if(elCompleted) elCompleted.textContent = completed;
      if(elOngoing) elOngoing.textContent = ongoing;
      if(elCancelled) elCancelled.textContent = cancelled;
      if(elTotal) elTotal.textContent = total;
    }

    // ================= Event Listeners =================
    function setupEventListeners(){
      document.getElementById('searchInput')?.addEventListener('input',handleFilter);
      document.getElementById('dateFrom')?.addEventListener('change',handleFilter);
      document.getElementById('dateTo')?.addEventListener('change',handleFilter);
      document.getElementById('statusFilter')?.addEventListener('change',handleFilter);
    }

    function handleFilter(){
      const searchValue = document.getElementById('searchInput')?.value?.toLowerCase()||'';
      const dateFrom = parseIsoOrThaiToDate(document.getElementById('dateFrom')?.value);
      const dateTo = parseIsoOrThaiToDate(document.getElementById('dateTo')?.value);
      const status = document.getElementById('statusFilter')?.value;

      const filtered = historyData.filter(item=>{
        const matchText = item.id.toLowerCase().includes(searchValue)||(item.service||'').toLowerCase().includes(searchValue);
        const itemDate = parseIsoOrThaiToDate(item.date);
        const matchDate = (!dateFrom||itemDate>=dateFrom)&&(!dateTo||itemDate<=dateTo);
        const matchStatus = !status||item.status===status;
        return matchText&&matchDate&&matchStatus;
      });

      renderHistory(filtered);
      updateSummaryCards();
    }

    // ================= Modal =================
    async function openDetailModal(id, source){
      const modal = document.getElementById('detailModal');
      const content = document.getElementById('detailContent');
      if(!modal||!content) return;

      try{
        let data;
        if(source==='appointment'){
          const resp = await fetch(`${API_BASE}/api/appointments/${id}`, {credentials:'include'});
          if(!resp.ok) throw new Error('ไม่พบข้อมูลการนัดหมาย');
          data = await resp.json();
        } else if(source==='blood'){
          const resp = await fetch(`${API_BASE}/api/blood-appointments/${id}`, {credentials:'include'});
          if(!resp.ok) throw new Error('ไม่พบข้อมูลตรวจเลือด');
          data = await resp.json();
        }
        content.innerHTML = `<pre style="white-space:pre-wrap;">${JSON.stringify(data,null,2)}</pre>`;
        modal.style.display='flex';
      }catch(err){
        content.innerHTML = `<p style="color:red;">เกิดข้อผิดพลาด: ${err.message}</p>`;
        modal.style.display='flex';
      }
    }

    function closeDetailModal(){
      const modal = document.getElementById('detailModal');
      if(modal) modal.style.display='none';
    }

    // ================= Initialize =================
    document.addEventListener('DOMContentLoaded',()=>{
      loadCurrentPatient();
      fetchAndRenderHistory();
      setupEventListeners();
    });



  </script>
</body>
</html>