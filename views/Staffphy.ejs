<!DOCTYPE html>
<html lang="th">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>รายการผู้ป่วย - UPaM Staff</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', sans-serif;
      background: #f8fafc;
      min-height: 100vh;
      font-size: 14px;
    }

    /* Header */
    .header {
      background: white;
      padding: 12px 24px;
      box-shadow: 0 5px 10px rgba(0, 0, 0, 0.477);
      display: flex;
      justify-content: space-between;
      align-items: center;
      position: sticky;
      top: 0;
      z-index: 100;
      background: linear-gradient(135deg, #ffff 0%, #183ccbba 100%);
    }

    .logo {
      display: flex;
      align-items: center;
    }

    .logo-img {
      width: 60px;
      height: 60px;
      margin-right: 10px;
    }

    .phone-number {
      color: #6B7280;
      font-size: 16px;
      display: flex;
      align-items: center;
      gap: 5px;
    }

    .header-right {
      display: flex;
      align-items: center;
      gap: 20px;
    }

    .staff-info {
      display: flex;
      flex-direction: column;
      align-items: flex-end;
      color: #374151;
    }

    .staff-name {
      font-weight: 600;
      font-size: 14px;
    }

    .staff-role {
      font-size: 12px;
      color: #6B7280;
    }

    .header-icons {
      display: flex;
      gap: 8px;
    }

    .icon-btn {
      width: 36px;
      height: 36px;
      border-radius: 50%;
      background: #F3F4F6;
      border: none;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.2s ease;
      color: #6B7280;
    }

    .icon-btn:hover {
      background: #E5E7EB;
      transform: translateY(-1px);
    }

    .notification-btn {
      position: relative;
    }

    .notification-btn::after {
      content: '';
      position: absolute;
      top: 6px;
      right: 6px;
      width: 8px;
      height: 8px;
      background: #EF4444;
      border-radius: 50%;
      border: 2px solid white;
    }

    /* Profile Dropdown Styles */
    .profile-dropdown {
      position: relative;
      display: inline-block;
    }

    .dropdown-content {
      display: none;
      position: absolute;
      right: 0;
      background-color: white;
      min-width: 180px;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);
      z-index: 1000;
      border-radius: 12px;
      overflow: hidden;
      border: 1px solid #e5e7eb;
      margin-top: 8px;
    }

    .dropdown-content.show {
      display: block;
      animation: dropdownFadeIn 0.3s ease-out;
    }

    @keyframes dropdownFadeIn {
      from {
        opacity: 0;
        transform: translateY(-10px);
      }

      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .dropdown-item {
      color: #374151;
      padding: 12px 20px;
      text-decoration: none;
      display: block;
      transition: all 0.3s ease;
      border: none;
      background: none;
      width: 100%;
      text-align: left;
      font-size: 14px;
      cursor: pointer;
    }

    .dropdown-item:hover {
      background-color: #f9fafb;
      color: #1f2937;
    }

    .dropdown-item i {
      margin-right: 10px;
      width: 16px;
      color: #6b7280;
    }

    .dropdown-item.logout {
      border-top: 1px solid #e5e7eb;
      color: #dc2626;
    }

    .dropdown-item.logout:hover {
      background-color: #fef2f2;
      color: #dc2626;
    }

    .dropdown-item.logout i {
      color: #dc2626;
    }

    /* Container */
    .container {
      max-width: 1200px;
      margin: 40px auto;
      padding: 0 20px;
    }

    .page-title {
      text-align: center;
      font-size: 48px;
      color: #3B82F6;
      font-weight: 600;
      margin-bottom: 10px;
    }

    .subtitle {
      text-align: center;
      color: #6B7280;
      font-size: 18px;
      margin-bottom: 40px;
    }

    /* Search and Filter Section */
    .filter-section {
      background: white;
      border-radius: 16px;
      padding: 24px;
      margin-bottom: 24px;
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
    }

    .filter-row {
      display: flex;
      gap: 20px;
      align-items: center;
      flex-wrap: wrap;
    }

    .search-input {
      flex: 1;
      min-width: 300px;
      padding: 12px 16px;
      border: 2px solid #E5E7EB;
      border-radius: 8px;
      font-size: 16px;
      background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="gray"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/></svg>') no-repeat right 12px center;
      background-size: 20px;
      padding-right: 40px;
    }

    .search-input:focus {
      outline: none;
      border-color: #3B82F6;
    }

    .date-filter {
      padding: 12px 16px;
      border: 2px solid #E5E7EB;
      border-radius: 8px;
      font-size: 16px;
      background: white;
      cursor: pointer;
    }

    .date-filter:focus {
      outline: none;
      border-color: #3B82F6;
    }

    /* Status Tabs */
    .status-tabs {
      display: flex;
      gap: 8px;
      margin-bottom: 24px;
      background: white;
      padding: 8px;
      border-radius: 12px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .status-tab {
      padding: 12px 24px;
      border: none;
      border-radius: 8px;
      font-size: 16px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s ease;
      background: transparent;
      color: #6B7280;
      position: relative;
    }

    .status-tab.active {
      background: #3B82F6;
      color: white;
    }

    .status-tab:hover:not(.active) {
      background: #F3F4F6;
      color: #374151;
    }

    .status-count {
      background: #EF4444;
      color: white;
      border-radius: 12px;
      padding: 2px 8px;
      font-size: 12px;
      font-weight: 600;
      margin-left: 8px;
    }

    .status-tab.active .status-count {
      background: rgba(255, 255, 255, 0.3);
    }

    /* Booking Cards */
    .booking-list {
      display: flex;
      flex-direction: column;
      gap: 16px;
    }

    .booking-card {
      background: white;
      border-radius: 16px;
      padding: 24px;
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
      border-left: 4px solid #10B981;
      transition: all 0.2s ease;
      cursor: pointer;
    }

    .booking-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
    }

    .booking-card.completed {
      border-left-color: #6B7280;
      opacity: 0.8;
    }

    .booking-header {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      margin-bottom: 16px;
    }

    .booking-id {
      font-size: 18px;
      font-weight: 700;
      color: #1F2937;
    }

    .booking-status {
      padding: 6px 12px;
      border-radius: 20px;
      font-size: 14px;
      font-weight: 600;
    }

    .status-today {
      background: #DBEAFE;
      color: #1E40AF;
    }

    .status-completed {
      background: #D1FAE5;
      color: #065F46;
    }

    .status-past {
      background: #F3F4F6;
      color: #6B7280;
    }

    .booking-info {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 16px;
      margin-bottom: 16px;
    }

    .info-item {
      display: flex;
      flex-direction: column;
      gap: 4px;
    }

    .info-label {
      font-size: 14px;
      color: #6B7280;
      font-weight: 500;
    }

    .info-value {
      font-size: 16px;
      color: #1F2937;
      font-weight: 500;
    }

    .price-value {
      color: #EF4444;
      font-weight: 700;
    }

    .booking-actions {
      display: flex;
      gap: 12px;
      justify-content: flex-end;
      margin-top: 16px;
      padding-top: 16px;
      border-top: 1px solid #E5E7EB;
    }

    .btn {
      padding: 8px 16px;
      border: none;
      border-radius: 8px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.2s ease;
      display: inline-flex;
      align-items: center;
      gap: 6px;
    }

    .btn-view {
      background: #F3F4F6;
      color: #374151;
      border: 1px solid #E5E7EB;
    }

    .btn-view:hover {
      background: #E5E7EB;
    }

    .btn-upload {
      background: #3B82F6;
      color: white;
    }

    .btn-upload:hover {
      background: #2563EB;
    }

    .btn-download {
      background: #10B981;
      color: white;
    }

    .btn-download:hover {
      background: #059669;
    }

    .btn:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    /* Detail Modal */
    .detail-modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 1000;
      justify-content: center;
      align-items: center;
    }

    .detail-modal.show {
      display: flex;
    }

    .modal-content {
      background: white;
      border-radius: 16px;
      padding: 32px;
      max-width: 600px;
      width: 90%;
      max-height: 90vh;
      overflow-y: auto;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
    }

    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 24px;
      padding-bottom: 16px;
      border-bottom: 2px solid #E5E7EB;
    }

    .modal-title {
      font-size: 24px;
      font-weight: 700;
      color: #1F2937;
    }

    .close-btn {
      background: none;
      border: none;
      font-size: 24px;
      color: #6B7280;
      cursor: pointer;
      padding: 4px;
      border-radius: 4px;
      transition: all 0.2s ease;
    }

    .close-btn:hover {
      background: #F3F4F6;
      color: #374151;
    }

    .detail-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 20px;
      margin-bottom: 24px;
    }

    .detail-item {
      display: flex;
      flex-direction: column;
      gap: 6px;
    }

    .detail-label {
      font-size: 14px;
      color: #6B7280;
      font-weight: 500;
    }

    .detail-value {
      font-size: 16px;
      color: #1F2937;
      font-weight: 500;
    }

    .problem-section {
      grid-column: 1 / -1;
      background: #F9FAFB;
      padding: 16px;
      border-radius: 8px;
      border-left: 4px solid #3B82F6;
    }

    .result-section {
      grid-column: 1 / -1;
      background: #F0FDF4;
      padding: 16px;
      border-radius: 8px;
      border-left: 4px solid #10B981;
    }

    .modal-actions {
      display: flex;
      gap: 12px;
      justify-content: flex-end;
      margin-top: 24px;
      padding-top: 16px;
      border-top: 1px solid #E5E7EB;
    }

    /* Upload Modal */
    .upload-modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 1001;
      justify-content: center;
      align-items: center;
    }

    .upload-modal.show {
      display: flex;
    }

    .upload-modal-content {
      background: white;
      border-radius: 16px;
      padding: 32px;
      max-width: 500px;
      width: 90%;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
    }

    .upload-modal-title {
      font-size: 20px;
      font-weight: 600;
      color: #1F2937;
      margin-bottom: 20px;
      text-align: center;
    }

    .file-upload-area {
      border: 2px dashed #D1D5DB;
      border-radius: 12px;
      padding: 40px 20px;
      text-align: center;
      margin-bottom: 20px;
      transition: all 0.2s ease;
      cursor: pointer;
    }

    .file-upload-area:hover {
      border-color: #3B82F6;
      background: #F8FAFC;
    }

    .file-upload-area.dragover {
      border-color: #3B82F6;
      background: #EFF6FF;
    }

    .upload-icon {
      font-size: 48px;
      color: #9CA3AF;
      margin-bottom: 16px;
    }

    .upload-text {
      font-size: 16px;
      color: #374151;
      margin-bottom: 8px;
    }

    .upload-subtext {
      font-size: 14px;
      color: #6B7280;
    }

    .file-input {
      display: none;
    }

    .selected-file {
      background: #EFF6FF;
      padding: 12px 16px;
      border-radius: 8px;
      margin: 12px 0;
      display: flex;
      align-items: center;
      gap: 12px;
    }

    .file-name {
      flex: 1;
      font-weight: 500;
      color: #1F2937;
    }

    .remove-file {
      background: none;
      border: none;
      color: #EF4444;
      cursor: pointer;
      font-size: 18px;
      padding: 4px;
      border-radius: 4px;
    }

    .remove-file:hover {
      background: #FEE2E2;
    }

    .upload-modal-actions {
      display: flex;
      gap: 12px;
      justify-content: center;
    }

    .btn-modal {
      padding: 12px 24px;
      border: none;
      border-radius: 8px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.2s ease;
    }

    .btn-modal-primary {
      background: #3B82F6;
      color: white;
    }

    .btn-modal-primary:hover {
      background: #2563EB;
    }

    .btn-modal-secondary {
      background: #F3F4F6;
      color: #374151;
    }

    .btn-modal-secondary:hover {
      background: #E5E7EB;
    }

    /* Success Modal */
    .success-modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 1002;
      justify-content: center;
      align-items: center;
    }

    .success-modal.show {
      display: flex;
    }

    .success-modal-content {
      background: white;
      border-radius: 16px;
      padding: 40px;
      max-width: 400px;
      width: 90%;
      text-align: center;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
    }

    .success-icon {
      width: 80px;
      height: 80px;
      background: #10B981;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto 20px;
      color: white;
      font-size: 36px;
    }

    .success-title {
      font-size: 24px;
      font-weight: 600;
      color: #1F2937;
      margin-bottom: 10px;
    }

    .success-message {
      font-size: 16px;
      color: #6B7280;
      margin-bottom: 24px;
      line-height: 1.5;
    }

    /* Empty State */
    .empty-state {
      text-align: center;
      padding: 60px 20px;
      color: #6B7280;
    }

    .empty-icon {
      font-size: 48px;
      margin-bottom: 16px;
      color: #D1D5DB;
    }

    .empty-title {
      font-size: 20px;
      font-weight: 600;
      margin-bottom: 8px;
    }

    .empty-message {
      font-size: 16px;
    }

    /* Loading */
    .loading {
      opacity: 0.7;
      pointer-events: none;
    }

    .btn.loading::after {
      content: "";
      width: 14px;
      height: 14px;
      margin-left: 6px;
      border: 2px solid transparent;
      border-top: 2px solid currentColor;
      border-radius: 50%;
      display: inline-block;
      animation: spin 1s linear infinite;
    }

    @keyframes spin {
      0% {
        transform: rotate(0deg);
      }

      100% {
        transform: rotate(360deg);
      }
    }

    /* Responsive */
    @media (max-width: 768px) {
      .container {
        padding: 0 16px;
      }

      .page-title {
        font-size: 32px;
      }

      .filter-row {
        flex-direction: column;
      }

      .search-input {
        min-width: 100%;
      }

      .booking-info {
        grid-template-columns: 1fr;
      }

      .booking-actions {
        flex-wrap: wrap;
      }

      .detail-grid {
        grid-template-columns: 1fr;
      }

      .status-tabs {
        overflow-x: auto;
        padding: 8px;
      }
    }
  </style>
</head>

<body>
  <!-- Header -->
  <!-- <div class="header">
    <div class="logo">
      <img src="./img/UPaMLOGO.png" class="logo-img"> 
      <div class="phone-number">
        <i class="fas fa-phone"></i>
        1234
      </div>
    </div>
    
    <div class="header-right">
      <div class="staff-info">
        <div class="staff-name">ทนพ. กำปั่น แสงจันทร์</div>
        <div class="staff-role">เจ้าหน้าที่กายภาพบำบัด</div>
      </div>
      <div class="header-icons">
        <button class="icon-btn" title="ค้นหา">
          <i class="fas fa-search"></i>
        </button>
        <button class="icon-btn notification-btn" title="การแจ้งเตือน">
          <i class="fas fa-bell"></i>
        </button>
        <div class="profile-dropdown">
                  <a href="/Login">
                    <button class="icon-btn" title="บัญชีผู้ใช้">
                        <i class="fas fa-user"></i>
                    </button>
                  </a>
                    <div class="dropdown-content" id="profileDropdown">
                        <button class="dropdown-item logout" onclick="logout()">
                            <i class="fas fa-sign-out-alt"></i>
                            ออกจากระบบ
                        </button>
                    </div>
                </div>
      </div>
    </div>
  </div> -->

  <!-- Header -->
  <div class="header">
    <div class="logo">
      <img src="./img/UPaMLOGO.png" class="logo-img">
      <div class="phone-number">
        <i class="fas fa-phone"></i>
        1234
      </div>
    </div>

    <div class="header-right">
      <div class="staff-info">
        <div class="staff-name" id="profileName"></div>
        <div class="staff-role" id="profileRole"></div>
      </div>
      <div class="header-right">
            <div class="header-icons">
                <button class="icon-btn" title="ค้นหา">
                <i class="fas fa-search"></i>
                </button>

                <button class="icon-btn notification-btn" title="การแจ้งเตือน">
                <i class="fas fa-bell"></i>
                </button>

                <!-- ปุ่มโปรไฟล์ -->
                <div class="profile-dropdown">
                <button class="icon-btn" id="profileBtn" title="บัญชีผู้ใช้">
                    <i class="fas fa-user"></i>
                </button>
                <div class="dropdown-content" id="profileDropdown">
                    <a href="/userhistory" class="dropdown-item">
                    <i class="fas fa-id-card"></i> โปรไฟล์
                    </a>
                    <button class="dropdown-item logout" onclick="logout(event)">
                    <i class="fas fa-sign-out-alt"></i> ออกจากระบบ
                    </button>
                </div>
                </div>
            </div>
        </div>
    </div>
  </div>



  <!-- Main Content -->
  <div class="container">
    <h1 class="page-title">รายการผู้ป่วย</h1>
    <p class="subtitle">ระบบจัดการการนัดหมายและอัปโหลดผลตรวจ</p>

    <!-- Filter Section -->
    <div class="filter-section">
      <div class="filter-row">
        <input type="text" class="search-input" placeholder="ค้นหาด้วยรหัสการจอง หรือ ชื่อผู้ป่วย..." id="searchInput">
        <input type="date" class="date-filter" id="dateFilter">
      </div>
    </div>

    <!-- Status Tabs -->
    <div class="status-tabs">
      <button class="status-tab active" data-status="today" onclick="switchTab('today')">
        วันนี้ <span id="todayCount" class="count">0</span>
      </button>
      <button class="status-tab" data-status="completed" onclick="switchTab('completed')">
        อัปโหลดแล้ว <span id="completedCount" class="count">0</span>
      </button>
      <button class="status-tab" data-status="history" onclick="switchTab('history')">
        ประวัติ <span id="historyCount" class="count">0</span>
      </button>
    </div>

<div id="bookingList" class="booking-list"></div>

    <!-- Booking List -->
    <div class="booking-list" id="bookingList">
      <!-- Bookings will be populated here -->
    </div>
  </div>

  <!-- Detail Modal -->
  <div class="detail-modal" id="detailModal">
    <div class="modal-content">
      <div class="modal-header">
        <h3 class="modal-title">รายละเอียดผู้ป่วย</h3>
        <button class="close-btn" onclick="closeDetailModal()">
          <i class="fas fa-times"></i>
        </button>
      </div>

      <div class="detail-grid">
        <div class="detail-item">
          <div class="detail-label">รหัสการจอง</div>
          <div class="detail-value" id="modalBookingId">-</div>
        </div>

        <div class="detail-item">
          <div class="detail-label">ชื่อ-นามสกุล</div>
          <div class="detail-value" id="modalPatientName">-</div>
        </div>

        <div class="detail-item">
          <div class="detail-label">บริการ</div>
          <div class="detail-value" id="modalService">-</div>
        </div>

        <div class="detail-item">
          <div class="detail-label">วันที่นัดหมาย</div>
          <div class="detail-value" id="modalDate">-</div>
        </div>

        <div class="detail-item">
          <div class="detail-label">เวลา</div>
          <div class="detail-value" id="modalTime">-</div>
        </div>

        <div class="detail-item">
          <div class="detail-label">ค่าบริการ</div>
          <div class="detail-value price-value" id="modalPrice">-</div>
        </div>

        <div class="detail-item problem-section">
          <div class="detail-label">ปัญหาสุขภาพ</div>
          <div class="detail-value" id="modalProblem">-</div>
        </div>

        <div class="detail-item result-section" id="resultSection" style="display: none;">
          <div class="detail-label">ผลการตรวจ</div>
          <div class="detail-value" id="modalResult">-</div>
        </div>
      </div>

      <div class="modal-actions" id="modalActions">
        <!-- Actions will be populated based on status -->
      </div>
    </div>
  </div>

  <!-- Upload Modal -->
  <div class="upload-modal" id="uploadModal">
    <div class="upload-modal-content">
      <h3 class="upload-modal-title">อัปโหลดผลการตรวจ</h3>

      <div class="file-upload-area" id="fileUploadArea" onclick="document.getElementById('fileInput').click()">
        <div class="upload-icon">
          <i class="fas fa-cloud-upload-alt"></i>
        </div>
        <div class="upload-text">คลิกหรือลากไฟล์มาวางที่นี่</div>
        <div class="upload-subtext">รองรับไฟล์ PDF, DOC, DOCX, JPG, PNG (สูงสุด 10MB)</div>
      </div>

      <input type="file" id="fileInput" class="file-input" accept=".pdf,.doc,.docx,.jpg,.jpeg,.png"
        onchange="handleFileSelect(event)">

      <div id="selectedFile" class="selected-file" style="display: none;">
        <i class="fas fa-file"></i>
        <span class="file-name" id="fileName"></span>
        <button class="remove-file" onclick="removeFile()">
          <i class="fas fa-times"></i>
        </button>
      </div>

      <div class="upload-modal-actions">

        <button class="btn-modal btn-modal-primary" id="uploadBtn" onclick="uploadFile()">อัปโหลด</button>
        <button class="btn-modal btn-modal-secondary" onclick="closeUploadModal()">ยกเลิก</button>
      </div>
    </div>
  </div>

  <!-- Success Modal -->
  <div class="success-modal" id="successModal">
    <div class="success-modal-content">
      <div class="success-icon">
        <i class="fas fa-check"></i>
      </div>
      <h3 class="success-title">อัปโหลดสำเร็จ!</h3>
      <p class="success-message" id="successMessage">
        ผลการตรวจได้ถูกอัปโหลดเรียบร้อยแล้ว
      </p>
      <button class="btn-modal btn-modal-primary" onclick="closeSuccessModal()">
        ตกลง
      </button>
    </div>
  </div>

  <script>
    let currentTab = 'today';
    let selectedFile = null;
    let bookings = [];
    let currentBookingId = null;

    // Profile dropdown
    const profileBtn = document.getElementById('profileBtn');
    const profileDropdown = document.getElementById('profileDropdown');

    if (profileBtn && profileDropdown) {
      profileBtn.addEventListener('click', e => {
        e.stopPropagation();
        profileDropdown.classList.toggle('show');
      });
      
      window.addEventListener('click', () => {
        if (profileDropdown.classList.contains('show')) {
          profileDropdown.classList.remove('show');
        }
      });
      
      profileDropdown.addEventListener('click', e => e.stopPropagation());
    }

    // Logout
    document.querySelector('.logout')?.addEventListener('click', async function(event) {
      if (!confirm('คุณต้องการออกจากระบบหรือไม่?')) return;
      
      const btn = event.currentTarget;
      btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> กำลังออกจากระบบ...';
      
      try {
        const res = await fetch('/logout', { method: 'GET' });
        if (res.ok) {
          window.location.href = '/login';
        } else {
          alert('ออกจากระบบไม่สำเร็จ');
          btn.innerHTML = 'ออกจากระบบ';
        }
      } catch (err) {
        console.error(err);
        alert('เกิดข้อผิดพลาด');
        btn.innerHTML = 'ออกจากระบบ';
      }
    });

    // Load appointments
    async function loadAppointments() {
      try {
        console.log('🔄 Loading appointments...');
        const res = await fetch('/api/lab/StaffPhy');
        
        if (!res.ok) {
          throw new Error(`HTTP error! status: ${res.status}`);
        }
        
        bookings = await res.json();
        
        console.log('📥 Raw response:', bookings);
        console.log('📊 Total bookings:', bookings.length);
        
        // แสดงข้อมูลแต่ละ booking
        bookings.forEach(b => {
          console.log(`ID ${b.id}: date=${b.date}, status=${b.status}, result=${b.result_file || 'NULL'}`);
        });
        
        console.log('📊 Status breakdown:', {
          today: bookings.filter(b => b.status === 'today').length,
          completed: bookings.filter(b => b.status === 'completed').length,
          history: bookings.filter(b => b.status === 'history').length
        });
        
        updateCounts();
        renderBookings();
      } catch (error) {
        console.error('❌ Error loading appointments:', error);
        showNotification('ไม่สามารถโหลดข้อมูลได้', 'error');
      }
    }

    // Initialize
    function initializePage() {
      setTodayDate();
      setupEventListeners();
      getUserProfile();
      loadAppointments();
    }

    // Get user profile
    async function getUserProfile() {
      try {
        const res = await fetch('/api/user');
        const data = await res.json();
        
        document.getElementById('profileName').textContent = data.fullname || 'ผู้ใช้';
        document.getElementById('profileRole').textContent = data.role || 'หมอ';
      } catch (err) {
        console.error('Error loading profile:', err);
      }
    }

    // Set today's date
    function setTodayDate() {
      const today = new Date();
      const dateString = today.toISOString().split('T')[0];
      const dateFilter = document.getElementById('dateFilter');
      if (dateFilter) dateFilter.value = dateString;
    }

    // Setup event listeners
    function setupEventListeners() {
      document.getElementById('searchInput')?.addEventListener('input', handleSearch);
      document.getElementById('dateFilter')?.addEventListener('change', handleSearch);
      
      ['detailModal', 'uploadModal', 'successModal'].forEach(modalId => {
        const modal = document.getElementById(modalId);
        if (modal) {
          modal.addEventListener('click', e => {
            if (e.target === modal) {
              if (modalId === 'detailModal') closeDetailModal();
              else if (modalId === 'uploadModal') closeUploadModal();
              else closeSuccessModal();
            }
          });
        }
      });
      
      const uploadArea = document.getElementById('fileUploadArea');
      if (uploadArea) {
        uploadArea.addEventListener('dragover', e => {
          e.preventDefault();
          uploadArea.classList.add('dragover');
        });
        
        uploadArea.addEventListener('dragleave', e => {
          e.preventDefault();
          uploadArea.classList.remove('dragover');
        });
        
        uploadArea.addEventListener('drop', e => {
          e.preventDefault();
          uploadArea.classList.remove('dragover');
          if (e.dataTransfer.files.length > 0) {
            handleFileSelect({ target: { files: e.dataTransfer.files } });
          }
        });
      }
      
      document.addEventListener('keydown', e => {
        if (e.key === 'Escape') {
          closeDetailModal();
          closeUploadModal();
          closeSuccessModal();
        }
      });
    }

    // Switch tab
    function switchTab(status) {
      currentTab = status;
      
      document.querySelectorAll('.status-tab').forEach(tab => {
        tab.classList.remove('active');
      });
      document.querySelector(`[data-status="${status}"]`)?.classList.add('active');
      
      renderBookings();
    }

    // Render bookings
    function renderBookings() {
      const bookingList = document.getElementById('bookingList');
      if (!bookingList) return;
      
      let filteredBookings = bookings.filter(booking => booking.status === currentTab);
      
      console.log('📊 Current tab:', currentTab);
      console.log('📋 Filtered bookings:', filteredBookings.length);
      
      if (filteredBookings.length === 0) {
        bookingList.innerHTML = `
          <div class="empty-state">
            <div class="empty-icon"><i class="fas fa-calendar-times"></i></div>
            <div class="empty-title">ไม่มีรายการในสถานะนี้</div>
            <div class="empty-message">ยังไม่มีรายการผู้ป่วยที่ต้องจัดการในขณะนี้</div>
          </div>
        `;
        return;
      }
      
      let html = '';
      filteredBookings.forEach(booking => {
        const statusClass = booking.status === 'today' ? 'status-today' :
          booking.status === 'completed' ? 'status-completed' : 'status-past';
        const statusText = booking.status === 'today' ? 'วันนี้' :
          booking.status === 'completed' ? 'อัปโหลดแล้ว' : 'ประวัติ';
        
        const hasResult = booking.result_file && booking.result_file.trim() !== '';
        
        html += `
          <div class="booking-card ${booking.status}">
            <div class="booking-header">
              <div class="booking-id">รหัส ${booking.id}</div>
              <div class="booking-status ${statusClass}">${statusText}</div>
            </div>
            
            <div class="booking-info">
              <div class="info-item">
                <div class="info-label">ชื่อผู้ป่วย</div>
                <div class="info-value">${booking.patientName}</div>
              </div>
              <div class="info-item">
                <div class="info-label">บริการ</div>
                <div class="info-value">${booking.name}</div>
              </div>
              <div class="info-item">
                <div class="info-label">วันที่</div>
                <div class="info-value">${booking.date}</div>
              </div>
              <div class="info-item">
                <div class="info-label">เวลา</div>
                <div class="info-value">${booking.time} น.</div>
              </div>
              <div class="info-item">
                <div class="info-label">ค่าบริการ</div>
                <div class="info-value price-value">${booking.price} บาท</div>
              </div>
              <div class="info-item">
                <div class="info-label">เจ้าหน้าที่</div>
                <div class="info-value">${booking.assignedStaff}</div>
              </div>
            </div>
            
            <div class="booking-actions">
              <button class="btn btn-view" data-action="view" data-id="${booking.id}">
                <i class="fas fa-eye"></i> ดูรายละเอียด
              </button>
              ${booking.status === 'today' && !hasResult ? `
                <button class="btn btn-upload" data-action="upload" data-id="${booking.id}">
                  <i class="fas fa-upload"></i> อัปโหลดผล
                </button>
              ` : ''}
              ${hasResult ? `
                <button class="btn btn-download" data-action="download" data-id="${booking.id}">
                  <i class="fas fa-download"></i> ดาวน์โหลด
                </button>
              ` : ''}
            </div>
          </div>
        `;
      });
      
      bookingList.innerHTML = html;
      
      // Attach event listeners
      document.querySelectorAll('.booking-actions button').forEach(btn => {
        btn.addEventListener('click', function(e) {
          e.stopPropagation();
          const action = this.getAttribute('data-action');
          const id = parseInt(this.getAttribute('data-id'));
          
          if (action === 'view') openDetailModal(id);
          else if (action === 'upload') openUploadModal(id);
          else if (action === 'download') downloadResult(id);
        });
      });
    }

    // Update counts
    function updateCounts() {
      const todayCount = bookings.filter(b => b.status === 'today').length;
      const completedCount = bookings.filter(b => b.status === 'completed').length;
      const historyCount = bookings.filter(b => b.status === 'history').length;
      
      document.getElementById('todayCount').textContent = todayCount;
      document.getElementById('completedCount').textContent = completedCount;
      document.getElementById('historyCount').textContent = historyCount;
    }

    // Search
    function handleSearch() {
      const searchTerm = document.getElementById('searchInput')?.value.toLowerCase().trim() || '';
      const dateFilter = document.getElementById('dateFilter')?.value;
      
      let filteredBookings = bookings.filter(booking => booking.status === currentTab);
      
      if (searchTerm) {
        filteredBookings = filteredBookings.filter(booking => {
          const idMatch = String(booking.id).includes(searchTerm);
          const nameMatch = booking.patientName?.toLowerCase().includes(searchTerm);
          return idMatch || nameMatch;
        });
      }
      
      if (dateFilter) {
        const filterDate = new Date(dateFilter);
        filteredBookings = filteredBookings.filter(booking => {
          const [day, month, year] = booking.date.split('/');
          const bookingDate = new Date(year, month - 1, day);
          return bookingDate.toDateString() === filterDate.toDateString();
        });
      }
      
      displayFilteredBookings(filteredBookings);
    }

    function displayFilteredBookings(filteredBookings) {
      const bookingList = document.getElementById('bookingList');
      if (!bookingList) return;
      
      if (filteredBookings.length === 0) {
        bookingList.innerHTML = `
          <div class="empty-state">
            <div class="empty-icon"><i class="fas fa-search"></i></div>
            <div class="empty-title">ไม่พบรายการที่ค้นหา</div>
            <div class="empty-message">ลองเปลี่ยนคำค้นหาหรือกรองข้อมูลใหม่</div>
          </div>
        `;
        return;
      }
      
      // Use same rendering logic as renderBookings
      let html = '';
      filteredBookings.forEach(booking => {
        const statusClass = booking.status === 'today' ? 'status-today' :
          booking.status === 'completed' ? 'status-completed' : 'status-past';
        const statusText = booking.status === 'today' ? 'วันนี้' :
          booking.status === 'completed' ? 'อัปโหลดแล้ว' : 'ประวัติ';
        
        const hasResult = booking.result_file && booking.result_file.trim() !== '';
        
        html += `
          <div class="booking-card ${booking.status}">
            <div class="booking-header">
              <div class="booking-id">รหัส ${booking.id}</div>
              <div class="booking-status ${statusClass}">${statusText}</div>
            </div>
            <div class="booking-info">
              <div class="info-item">
                <div class="info-label">ชื่อผู้ป่วย</div>
                <div class="info-value">${booking.patientName}</div>
              </div>
              <div class="info-item">
                <div class="info-label">บริการ</div>
                <div class="info-value">${booking.name}</div>
              </div>
              <div class="info-item">
                <div class="info-label">วันที่</div>
                <div class="info-value">${booking.date}</div>
              </div>
              <div class="info-item">
                <div class="info-label">เวลา</div>
                <div class="info-value">${booking.time} น.</div>
              </div>
              <div class="info-item">
                <div class="info-label">ค่าบริการ</div>
                <div class="info-value price-value">${booking.price} บาท</div>
              </div>
              <div class="info-item">
                <div class="info-label">เจ้าหน้าที่</div>
                <div class="info-value">${booking.assignedStaff}</div>
              </div>
            </div>
            <div class="booking-actions">
              <button class="btn btn-view" data-action="view" data-id="${booking.id}">
                <i class="fas fa-eye"></i> ดูรายละเอียด
              </button>
              ${booking.status === 'today' && !hasResult ? `
                <button class="btn btn-upload" data-action="upload" data-id="${booking.id}">
                  <i class="fas fa-upload"></i> อัปโหลดผล
                </button>
              ` : ''}
              ${hasResult ? `
                <button class="btn btn-download" data-action="download" data-id="${booking.id}">
                  <i class="fas fa-download"></i> ดาวน์โหลด
                </button>
              ` : ''}
            </div>
          </div>
        `;
      });
      
      bookingList.innerHTML = html;
      
      document.querySelectorAll('.booking-actions button').forEach(btn => {
        btn.addEventListener('click', function(e) {
          e.stopPropagation();
          const action = this.getAttribute('data-action');
          const id = parseInt(this.getAttribute('data-id'));
          
          if (action === 'view') openDetailModal(id);
          else if (action === 'upload') openUploadModal(id);
          else if (action === 'download') downloadResult(id);
        });
      });
    }

    // Modal: Detail
    function openDetailModal(bookingId) {
      const booking = bookings.find(b => b.id === bookingId);
      if (!booking) return;
      
      currentBookingId = bookingId;
      
      document.getElementById('modalBookingId').textContent = booking.id;
      document.getElementById('modalPatientName').textContent = booking.patientName;
      document.getElementById('modalService').textContent = booking.name;
      document.getElementById('modalDate').textContent = booking.date;
      document.getElementById('modalTime').textContent = booking.time + ' น.';
      document.getElementById('modalPrice').textContent = booking.price + ' บาท';
      document.getElementById('modalProblem').textContent = '-';
      
      const modalActions = document.getElementById('modalActions');
      const hasResult = booking.result_file && booking.result_file.trim() !== '';
      
      if (booking.status === 'today' && !hasResult) {
        modalActions.innerHTML = `
          <button class="btn btn-upload" onclick="openUploadModal(${booking.id})">
            <i class="fas fa-upload"></i> อัปโหลดผลการตรวจ
          </button>
          <button class="btn btn-view" onclick="closeDetailModal()">
            <i class="fas fa-times"></i> ปิด
          </button>
        `;
      } else if (hasResult) {
        modalActions.innerHTML = `
          <button class="btn btn-download" onclick="downloadResult(${booking.id})">
            <i class="fas fa-download"></i> ดาวน์โหลดผล
          </button>
          <button class="btn btn-view" onclick="closeDetailModal()">
            <i class="fas fa-times"></i> ปิด
          </button>
        `;
      } else {
        modalActions.innerHTML = `
          <button class="btn btn-view" onclick="closeDetailModal()">
            <i class="fas fa-times"></i> ปิด
          </button>
        `;
      }
      
      document.getElementById('detailModal').classList.add('show');
    }

    function closeDetailModal() {
      document.getElementById('detailModal')?.classList.remove('show');
    }

    // Modal: Upload
    function openUploadModal(bookingId) {
      currentBookingId = bookingId;
      selectedFile = null;
      
      document.getElementById('selectedFile').style.display = 'none';
      document.getElementById('uploadBtn').disabled = true;
      document.getElementById('uploadModal').classList.add('show');
      closeDetailModal();
    }

    function closeUploadModal() {
      document.getElementById('uploadModal')?.classList.remove('show');
      selectedFile = null;
      currentBookingId = null;
    }

    function handleFileSelect(event) {
      const file = event.target.files[0];
      if (!file) return;
      
      const allowedTypes = [
        'application/pdf',
        'application/msword',
        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
        'image/jpeg',
        'image/jpg',
        'image/png'
      ];
      
      if (!allowedTypes.includes(file.type)) {
        showNotification('ประเภทไฟล์ไม่ถูกต้อง กรุณาเลือกไฟล์ PDF, DOC, DOCX, JPG หรือ PNG', 'error');
        return;
      }
      
      if (file.size > 10 * 1024 * 1024) {
        showNotification('ไฟล์มีขนาดใหญ่เกินไป (สูงสุด 10MB)', 'error');
        return;
      }
      
      selectedFile = file;
      document.getElementById('fileName').textContent = file.name;
      document.getElementById('selectedFile').style.display = 'flex';
      document.getElementById('uploadBtn').disabled = false;
    }

    function removeFile() {
      selectedFile = null;
      document.getElementById('selectedFile').style.display = 'none';
      document.getElementById('uploadBtn').disabled = true;
      document.getElementById('fileInput').value = '';
    }

    function uploadFile() {
      if (!selectedFile || !currentBookingId) {
        showNotification('กรุณาเลือกไฟล์', 'error');
        return;
      }
      
      const uploadBtn = document.getElementById('uploadBtn');
      uploadBtn.classList.add('loading');
      uploadBtn.textContent = 'กำลังอัปโหลด...';
      uploadBtn.disabled = true;
      
      const formData = new FormData();
      formData.append('file', selectedFile);
      
      fetch(`/api/appointments/upload-result/${currentBookingId}`, {
        method: 'POST',
        body: formData
      })
        .then(res => res.json())
        .then(data => {
          if (data.success) {
            closeUploadModal();
            return loadAppointments().then(() => {
              document.getElementById('successMessage').innerHTML = `
                ไฟล์ผลการตรวจสำหรับผู้ป่วยรหัส <strong>${currentBookingId}</strong><br>
                ได้ถูกอัปโหลดเรียบร้อยแล้ว
              `;
              document.getElementById('successModal').classList.add('show');
            });
          } else {
            showNotification(data.message || 'อัปโหลดไม่สำเร็จ', 'error');
          }
        })
        .catch(err => {
          console.error(err);
          showNotification('เกิดข้อผิดพลาดในการอัปโหลด', 'error');
        })
        .finally(() => {
          uploadBtn.classList.remove('loading');
          uploadBtn.textContent = 'อัปโหลด';
          uploadBtn.disabled = false;
        });
    }

    function closeSuccessModal() {
      document.getElementById('successModal')?.classList.remove('show');
    }

    // Download
    function downloadResult(bookingId) {
      const booking = bookings.find(b => b.id == bookingId);
      
      if (!booking || !booking.result_file || booking.result_file.trim() === '') {
        showNotification('ไม่พบไฟล์ผลการตรวจ', 'error');
        return;
      }
      
      window.location.href = `/api/appointments/download-result/${bookingId}`;
    }

    // Notification
    function showNotification(message, type = 'success') {
      const notification = document.createElement('div');
      notification.className = `notification ${type}`;
      notification.innerHTML = `
        <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'}"></i>
        ${message}
      `;
      
      notification.style.cssText = `
        position: fixed; top: 20px; right: 20px;
        background: ${type === 'success' ? '#10B981' : '#EF4444'};
        color: white; padding: 12px 20px; border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15); z-index: 2000;
        display: flex; align-items: center; gap: 8px; font-weight: 500;
        animation: slideIn 0.3s ease-out; max-width: 300px;
      `;
      
      document.body.appendChild(notification);
      
      setTimeout(() => {
        notification.style.animation = 'slideOut 0.3s ease-in forwards';
        setTimeout(() => notification.remove(), 300);
      }, 4000);
    }

    // CSS animations
    const style = document.createElement('style');
    style.textContent = `
      @keyframes slideIn { from { transform: translateX(100%); opacity: 0; } to { transform: translateX(0); opacity: 1; } }
      @keyframes slideOut { from { transform: translateX(0); opacity: 1; } to { transform: translateX(100%); opacity: 0; } }
    `;
    document.head.appendChild(style);

    // Initialize
    document.addEventListener('DOMContentLoaded', initializePage);
  </script>
</body>

</html>